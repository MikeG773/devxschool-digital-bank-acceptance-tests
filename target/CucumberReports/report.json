[{"line":2,"elements":[{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2907000000,"status":"passed"},"line":5,"name":"The user with \"jack@test.co\" is not in DB","match":{"arguments":[{"val":"\"jack@test.co\"","offset":14}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserWithIsNotInDB(java.lang.String)"},"keyword":"Given "},{"result":{"duration":1964000000,"status":"passed"},"line":6,"name":"User navigates to Digital Bank signup page","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_navigates_to_digital_bank_signup_page()"},"keyword":"And "}]},{"start_timestamp":"2023-12-10T21:55:23.911Z","before":[{"result":{"duration":1484000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.establishConnectionToDB()"}}],"line":11,"name":"Positive Case. As a user, I want to successfully create Digital Bank account","description":"","id":"digital-bank-registration-page;positive-case.-as-a-user--i-want-to-successfully-create-digital-bank-account","after":[{"result":{"duration":2000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.closeConnectionToDB()"}},{"result":{"duration":88000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.afterEachScenario(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":5394000000,"status":"passed"},"line":12,"name":"User creates account with following fields","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_creates_account_with_following_fields(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)"},"rows":[{"cells":["title","firstName","lastName","gender","dob","ssn","email","password","address","locality","region","postalCode","country","homePhone","mobilePhone","workPhone","termsCheckMark"]},{"cells":["Mr.","Jack","Test","M","12/12/1990","123-44-2235","jack@test.co","Tester123","12 Main st","city","CA","99921","US","2146591008","2136591208","1126593008","true"]}],"keyword":"When "},{"result":{"duration":43000000,"status":"passed"},"line":15,"name":"User should be displayed with the message  \"Success Registration Successful. Please Login.\"","match":{"arguments":[{"val":"\"Success Registration Successful. Please Login.\"","offset":43}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_should_be_displayed_with_the_message(java.lang.String)"},"keyword":"Then "},{"result":{"duration":475000000,"status":"passed"},"line":16,"name":"the following user info should be saved in the db","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theFollowingUserInfoShouldBeSavedInTheDb(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)"},"rows":[{"cells":["title","firstName","lastName","gender","dob","ssn","email","password","address","locality","region","postalCode","country","homePhone","mobilePhone","workPhone","accountNonExpired","accountNonLocked","credentialsNonExpired","enabled"]},{"cells":["Mr.","Jack","Test","M","12/12/1990","123-44-2235","jack@test.co","Tester123","12 Main st","city","CA","99921","US","2146591008","2136591208","1126593008","true","true","true","true"]}],"keyword":"Then "}],"tags":[{"name":"@Registration"},{"name":"@Test"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":989000000,"status":"passed"},"line":5,"name":"The user with \"jack@test.co\" is not in DB","match":{"arguments":[{"val":"\"jack@test.co\"","offset":14}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserWithIsNotInDB(java.lang.String)"},"keyword":"Given "},{"result":{"duration":1980000000,"status":"passed"},"line":6,"name":"User navigates to Digital Bank signup page","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_navigates_to_digital_bank_signup_page()"},"keyword":"And "}]},{"start_timestamp":"2023-12-10T21:55:36.404Z","before":[{"result":{"duration":1516000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.establishConnectionToDB()"}}],"line":30,"name":"Negative Test Cases. As a Digital Bank Admin I want to make sure users can not register without providing all valid data","description":"","id":"digital-bank-registration-page;negative-test-cases.-as-a-digital-bank-admin-i-want-to-make-sure-users-can-not-register-without-providing-all-valid-data;;2","after":[{"result":{"duration":1000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.closeConnectionToDB()"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":127000000,"status":"passed"},"line":23,"name":"User creates account with following fields","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_creates_account_with_following_fields(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)"},"rows":[{"cells":["title","firstName","lastName","gender","dob","ssn","email","password","address","locality","region","postalCode","country","homePhone","mobilePhone","workPhone","termsCheckMark"]},{"cells":["","","","","","","","","","","","","","","","",""]}],"keyword":"When "},{"result":{"duration":42000000,"status":"passed"},"line":26,"name":"the User should see the \"title\" required field error message \"Please select an item in the list.\"","match":{"arguments":[{"val":"\"title\"","offset":24},{"val":"\"Please select an item in the list.\"","offset":61}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Registration"},{"name":"@NegativeRegistrationCases"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":588000000,"status":"passed"},"line":5,"name":"The user with \"jack@test.co\" is not in DB","match":{"arguments":[{"val":"\"jack@test.co\"","offset":14}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserWithIsNotInDB(java.lang.String)"},"keyword":"Given "},{"result":{"duration":1792000000,"status":"passed"},"line":6,"name":"User navigates to Digital Bank signup page","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_navigates_to_digital_bank_signup_page()"},"keyword":"And "}]},{"start_timestamp":"2023-12-10T21:55:41.084Z","before":[{"result":{"duration":1264000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.establishConnectionToDB()"}}],"line":31,"name":"Negative Test Cases. As a Digital Bank Admin I want to make sure users can not register without providing all valid data","description":"","id":"digital-bank-registration-page;negative-test-cases.-as-a-digital-bank-admin-i-want-to-make-sure-users-can-not-register-without-providing-all-valid-data;;3","after":[{"result":{"duration":1000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.closeConnectionToDB()"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":138000000,"status":"passed"},"line":23,"name":"User creates account with following fields","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_creates_account_with_following_fields(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)"},"rows":[{"cells":["title","firstName","lastName","gender","dob","ssn","email","password","address","locality","region","postalCode","country","homePhone","mobilePhone","workPhone","termsCheckMark"]},{"cells":["Mr.","","","","","","","","","","","","","","","",""]}],"keyword":"When "},{"result":{"duration":20000000,"status":"passed"},"line":26,"name":"the User should see the \"firstName\" required field error message \"Please fill out this field.\"","match":{"arguments":[{"val":"\"firstName\"","offset":24},{"val":"\"Please fill out this field.\"","offset":65}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Registration"},{"name":"@NegativeRegistrationCases"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":575000000,"status":"passed"},"line":5,"name":"The user with \"jack@test.co\" is not in DB","match":{"arguments":[{"val":"\"jack@test.co\"","offset":14}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserWithIsNotInDB(java.lang.String)"},"keyword":"Given "},{"result":{"duration":2153000000,"status":"passed"},"line":6,"name":"User navigates to Digital Bank signup page","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_navigates_to_digital_bank_signup_page()"},"keyword":"And "}]},{"start_timestamp":"2023-12-10T21:55:44.905Z","before":[{"result":{"duration":1143000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.establishConnectionToDB()"}}],"line":32,"name":"Negative Test Cases. As a Digital Bank Admin I want to make sure users can not register without providing all valid data","description":"","id":"digital-bank-registration-page;negative-test-cases.-as-a-digital-bank-admin-i-want-to-make-sure-users-can-not-register-without-providing-all-valid-data;;4","after":[{"result":{"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.closeConnectionToDB()"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":248000000,"status":"passed"},"line":23,"name":"User creates account with following fields","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_creates_account_with_following_fields(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)"},"rows":[{"cells":["title","firstName","lastName","gender","dob","ssn","email","password","address","locality","region","postalCode","country","homePhone","mobilePhone","workPhone","termsCheckMark"]},{"cells":["Mr.","Jack","","","","","","","","","","","","","","",""]}],"keyword":"When "},{"result":{"duration":27000000,"status":"passed"},"line":26,"name":"the User should see the \"lastName\" required field error message \"Please fill out this field.\"","match":{"arguments":[{"val":"\"lastName\"","offset":24},{"val":"\"Please fill out this field.\"","offset":64}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Registration"},{"name":"@NegativeRegistrationCases"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":390000000,"status":"passed"},"line":5,"name":"The user with \"jack@test.co\" is not in DB","match":{"arguments":[{"val":"\"jack@test.co\"","offset":14}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserWithIsNotInDB(java.lang.String)"},"keyword":"Given "},{"result":{"duration":3137000000,"status":"passed"},"line":6,"name":"User navigates to Digital Bank signup page","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_navigates_to_digital_bank_signup_page()"},"keyword":"And "}]},{"start_timestamp":"2023-12-10T21:55:49.074Z","before":[{"result":{"duration":1021000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.establishConnectionToDB()"}}],"line":33,"name":"Negative Test Cases. As a Digital Bank Admin I want to make sure users can not register without providing all valid data","description":"","id":"digital-bank-registration-page;negative-test-cases.-as-a-digital-bank-admin-i-want-to-make-sure-users-can-not-register-without-providing-all-valid-data;;5","after":[{"result":{"duration":1000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.closeConnectionToDB()"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":196000000,"status":"passed"},"line":23,"name":"User creates account with following fields","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_creates_account_with_following_fields(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)"},"rows":[{"cells":["title","firstName","lastName","gender","dob","ssn","email","password","address","locality","region","postalCode","country","homePhone","mobilePhone","workPhone","termsCheckMark"]},{"cells":["Mr.","Jack","Test","","","","","","","","","","","","","",""]}],"keyword":"When "},{"result":{"duration":41000000,"status":"passed"},"line":26,"name":"the User should see the \"gender\" required field error message \"Please select one of these options.\"","match":{"arguments":[{"val":"\"gender\"","offset":24},{"val":"\"Please select one of these options.\"","offset":62}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Registration"},{"name":"@NegativeRegistrationCases"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":381000000,"status":"passed"},"line":5,"name":"The user with \"jack@test.co\" is not in DB","match":{"arguments":[{"val":"\"jack@test.co\"","offset":14}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserWithIsNotInDB(java.lang.String)"},"keyword":"Given "},{"result":{"duration":2044000000,"status":"passed"},"line":6,"name":"User navigates to Digital Bank signup page","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_navigates_to_digital_bank_signup_page()"},"keyword":"And "}]},{"start_timestamp":"2023-12-10T21:55:53.880Z","before":[{"result":{"duration":1016000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.establishConnectionToDB()"}}],"line":34,"name":"Negative Test Cases. As a Digital Bank Admin I want to make sure users can not register without providing all valid data","description":"","id":"digital-bank-registration-page;negative-test-cases.-as-a-digital-bank-admin-i-want-to-make-sure-users-can-not-register-without-providing-all-valid-data;;6","after":[{"result":{"duration":1000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.closeConnectionToDB()"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":230000000,"status":"passed"},"line":23,"name":"User creates account with following fields","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_creates_account_with_following_fields(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)"},"rows":[{"cells":["title","firstName","lastName","gender","dob","ssn","email","password","address","locality","region","postalCode","country","homePhone","mobilePhone","workPhone","termsCheckMark"]},{"cells":["Mr.","Jack","Test","M","","","","","","","","","","","","",""]}],"keyword":"When "},{"result":{"duration":22000000,"status":"passed"},"line":26,"name":"the User should see the \"dob\" required field error message \"Please fill out this field.\"","match":{"arguments":[{"val":"\"dob\"","offset":24},{"val":"\"Please fill out this field.\"","offset":59}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Registration"},{"name":"@NegativeRegistrationCases"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":378000000,"status":"passed"},"line":5,"name":"The user with \"jack@test.co\" is not in DB","match":{"arguments":[{"val":"\"jack@test.co\"","offset":14}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserWithIsNotInDB(java.lang.String)"},"keyword":"Given "},{"result":{"duration":3565000000,"status":"passed"},"line":6,"name":"User navigates to Digital Bank signup page","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_navigates_to_digital_bank_signup_page()"},"keyword":"And "}]},{"start_timestamp":"2023-12-10T21:55:57.587Z","before":[{"result":{"duration":1001000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.establishConnectionToDB()"}}],"line":35,"name":"Negative Test Cases. As a Digital Bank Admin I want to make sure users can not register without providing all valid data","description":"","id":"digital-bank-registration-page;negative-test-cases.-as-a-digital-bank-admin-i-want-to-make-sure-users-can-not-register-without-providing-all-valid-data;;7","after":[{"result":{"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.closeConnectionToDB()"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":306000000,"status":"passed"},"line":23,"name":"User creates account with following fields","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_creates_account_with_following_fields(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)"},"rows":[{"cells":["title","firstName","lastName","gender","dob","ssn","email","password","address","locality","region","postalCode","country","homePhone","mobilePhone","workPhone","termsCheckMark"]},{"cells":["Mr.","Jack","Test","M","12/12/1990","","","","","","","","","","","",""]}],"keyword":"When "},{"result":{"duration":20000000,"status":"passed"},"line":26,"name":"the User should see the \"ssn\" required field error message \"Please fill out this field.\"","match":{"arguments":[{"val":"\"ssn\"","offset":24},{"val":"\"Please fill out this field.\"","offset":59}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Registration"},{"name":"@NegativeRegistrationCases"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":379000000,"status":"passed"},"line":5,"name":"The user with \"jack@test.co\" is not in DB","match":{"arguments":[{"val":"\"jack@test.co\"","offset":14}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserWithIsNotInDB(java.lang.String)"},"keyword":"Given "},{"result":{"duration":2538000000,"status":"passed"},"line":6,"name":"User navigates to Digital Bank signup page","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_navigates_to_digital_bank_signup_page()"},"keyword":"And "}]},{"start_timestamp":"2023-12-10T21:56:02.871Z","before":[{"result":{"duration":1312000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.establishConnectionToDB()"}}],"line":36,"name":"Negative Test Cases. As a Digital Bank Admin I want to make sure users can not register without providing all valid data","description":"","id":"digital-bank-registration-page;negative-test-cases.-as-a-digital-bank-admin-i-want-to-make-sure-users-can-not-register-without-providing-all-valid-data;;8","after":[{"result":{"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.closeConnectionToDB()"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":334000000,"status":"passed"},"line":23,"name":"User creates account with following fields","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_creates_account_with_following_fields(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)"},"rows":[{"cells":["title","firstName","lastName","gender","dob","ssn","email","password","address","locality","region","postalCode","country","homePhone","mobilePhone","workPhone","termsCheckMark"]},{"cells":["Mr.","Jack","Test","M","12/12/1990","random","","","","","","","","","","",""]}],"keyword":"When "},{"result":{"duration":20000000,"status":"passed"},"line":26,"name":"the User should see the \"email\" required field error message \"Please fill out this field.\"","match":{"arguments":[{"val":"\"email\"","offset":24},{"val":"\"Please fill out this field.\"","offset":61}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Registration"},{"name":"@NegativeRegistrationCases"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":477000000,"status":"passed"},"line":5,"name":"The user with \"jack@test.co\" is not in DB","match":{"arguments":[{"val":"\"jack@test.co\"","offset":14}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserWithIsNotInDB(java.lang.String)"},"keyword":"Given "},{"result":{"duration":2211000000,"status":"passed"},"line":6,"name":"User navigates to Digital Bank signup page","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_navigates_to_digital_bank_signup_page()"},"keyword":"And "}]},{"start_timestamp":"2023-12-10T21:56:07.467Z","before":[{"result":{"duration":1002000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.establishConnectionToDB()"}}],"line":37,"name":"Negative Test Cases. As a Digital Bank Admin I want to make sure users can not register without providing all valid data","description":"","id":"digital-bank-registration-page;negative-test-cases.-as-a-digital-bank-admin-i-want-to-make-sure-users-can-not-register-without-providing-all-valid-data;;9","after":[{"result":{"duration":1000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.closeConnectionToDB()"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":352000000,"status":"passed"},"line":23,"name":"User creates account with following fields","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_creates_account_with_following_fields(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)"},"rows":[{"cells":["title","firstName","lastName","gender","dob","ssn","email","password","address","locality","region","postalCode","country","homePhone","mobilePhone","workPhone","termsCheckMark"]},{"cells":["Mr.","Jack","Test","M","12/12/1990","random","random","","","","","","","","","",""]}],"keyword":"When "},{"result":{"duration":22000000,"status":"passed"},"line":26,"name":"the User should see the \"password\" required field error message \"Please fill out this field.\"","match":{"arguments":[{"val":"\"password\"","offset":24},{"val":"\"Please fill out this field.\"","offset":64}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Registration"},{"name":"@NegativeRegistrationCases"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":518000000,"status":"passed"},"line":5,"name":"The user with \"jack@test.co\" is not in DB","match":{"arguments":[{"val":"\"jack@test.co\"","offset":14}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserWithIsNotInDB(java.lang.String)"},"keyword":"Given "},{"result":{"duration":2899000000,"status":"passed"},"line":6,"name":"User navigates to Digital Bank signup page","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_navigates_to_digital_bank_signup_page()"},"keyword":"And "}]},{"start_timestamp":"2023-12-10T21:56:11.547Z","before":[{"result":{"duration":1291000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.establishConnectionToDB()"}}],"line":38,"name":"Negative Test Cases. As a Digital Bank Admin I want to make sure users can not register without providing all valid data","description":"","id":"digital-bank-registration-page;negative-test-cases.-as-a-digital-bank-admin-i-want-to-make-sure-users-can-not-register-without-providing-all-valid-data;;10","after":[{"result":{"duration":1000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.closeConnectionToDB()"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":462000000,"status":"passed"},"line":23,"name":"User creates account with following fields","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_creates_account_with_following_fields(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)"},"rows":[{"cells":["title","firstName","lastName","gender","dob","ssn","email","password","address","locality","region","postalCode","country","homePhone","mobilePhone","workPhone","termsCheckMark"]},{"cells":["Mr.","Jack","Test","M","12/12/1990","random","random","Tester123","","","","","","","","",""]}],"keyword":"When "},{"result":{"error_message":"org.opentest4j.AssertionFailedError: the error message of required address field mismatch ==> expected: <Please fill out this field.> but was: <>\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1152)\n\tat co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(RegistrationSteps.java:43)\n\tat ✽.the User should see the \"address\" required field error message \"Please fill out this field.\"(classpath:ui/features/LoginAndRegistration/Registration.feature:26)\n","duration":19000000,"status":"failed"},"line":26,"name":"the User should see the \"address\" required field error message \"Please fill out this field.\"","match":{"arguments":[{"val":"\"address\"","offset":24},{"val":"\"Please fill out this field.\"","offset":63}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Registration"},{"name":"@NegativeRegistrationCases"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":615000000,"status":"passed"},"line":5,"name":"The user with \"jack@test.co\" is not in DB","match":{"arguments":[{"val":"\"jack@test.co\"","offset":14}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserWithIsNotInDB(java.lang.String)"},"keyword":"Given "},{"result":{"duration":2778000000,"status":"passed"},"line":6,"name":"User navigates to Digital Bank signup page","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_navigates_to_digital_bank_signup_page()"},"keyword":"And "}]},{"start_timestamp":"2023-12-10T21:56:16.764Z","before":[{"result":{"duration":1192000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.establishConnectionToDB()"}}],"line":39,"name":"Negative Test Cases. As a Digital Bank Admin I want to make sure users can not register without providing all valid data","description":"","id":"digital-bank-registration-page;negative-test-cases.-as-a-digital-bank-admin-i-want-to-make-sure-users-can-not-register-without-providing-all-valid-data;;11","after":[{"result":{"duration":1000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.closeConnectionToDB()"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":490000000,"status":"passed"},"line":23,"name":"User creates account with following fields","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_creates_account_with_following_fields(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)"},"rows":[{"cells":["title","firstName","lastName","gender","dob","ssn","email","password","address","locality","region","postalCode","country","homePhone","mobilePhone","workPhone","termsCheckMark"]},{"cells":["Mr.","Jack","Test","M","12/12/1990","random","random","Tester123","12 Main st","","","","","","","",""]}],"keyword":"When "},{"result":{"error_message":"org.opentest4j.AssertionFailedError: the error message of required locality field mismatch ==> expected: <Please fill out this field.> but was: <>\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1152)\n\tat co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(RegistrationSteps.java:43)\n\tat ✽.the User should see the \"locality\" required field error message \"Please fill out this field.\"(classpath:ui/features/LoginAndRegistration/Registration.feature:26)\n","duration":20000000,"status":"failed"},"line":26,"name":"the User should see the \"locality\" required field error message \"Please fill out this field.\"","match":{"arguments":[{"val":"\"locality\"","offset":24},{"val":"\"Please fill out this field.\"","offset":64}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Registration"},{"name":"@NegativeRegistrationCases"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":386000000,"status":"passed"},"line":5,"name":"The user with \"jack@test.co\" is not in DB","match":{"arguments":[{"val":"\"jack@test.co\"","offset":14}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserWithIsNotInDB(java.lang.String)"},"keyword":"Given "},{"result":{"duration":2540000000,"status":"passed"},"line":6,"name":"User navigates to Digital Bank signup page","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_navigates_to_digital_bank_signup_page()"},"keyword":"And "}]},{"start_timestamp":"2023-12-10T21:56:21.873Z","before":[{"result":{"duration":1024000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.establishConnectionToDB()"}}],"line":40,"name":"Negative Test Cases. As a Digital Bank Admin I want to make sure users can not register without providing all valid data","description":"","id":"digital-bank-registration-page;negative-test-cases.-as-a-digital-bank-admin-i-want-to-make-sure-users-can-not-register-without-providing-all-valid-data;;12","after":[{"result":{"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.closeConnectionToDB()"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":495000000,"status":"passed"},"line":23,"name":"User creates account with following fields","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_creates_account_with_following_fields(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)"},"rows":[{"cells":["title","firstName","lastName","gender","dob","ssn","email","password","address","locality","region","postalCode","country","homePhone","mobilePhone","workPhone","termsCheckMark"]},{"cells":["Mr.","Jack","Test","M","12/12/1990","random","random","Tester123","12 Main st","city","","","","","","",""]}],"keyword":"When "},{"result":{"error_message":"org.opentest4j.AssertionFailedError: the error message of required region field mismatch ==> expected: <Please fill out this field.> but was: <>\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1152)\n\tat co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(RegistrationSteps.java:43)\n\tat ✽.the User should see the \"region\" required field error message \"Please fill out this field.\"(classpath:ui/features/LoginAndRegistration/Registration.feature:26)\n","duration":20000000,"status":"failed"},"line":26,"name":"the User should see the \"region\" required field error message \"Please fill out this field.\"","match":{"arguments":[{"val":"\"region\"","offset":24},{"val":"\"Please fill out this field.\"","offset":62}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Registration"},{"name":"@NegativeRegistrationCases"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":380000000,"status":"passed"},"line":5,"name":"The user with \"jack@test.co\" is not in DB","match":{"arguments":[{"val":"\"jack@test.co\"","offset":14}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserWithIsNotInDB(java.lang.String)"},"keyword":"Given "},{"result":{"duration":2596000000,"status":"passed"},"line":6,"name":"User navigates to Digital Bank signup page","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_navigates_to_digital_bank_signup_page()"},"keyword":"And "}]},{"start_timestamp":"2023-12-10T21:56:26.349Z","before":[{"result":{"duration":1235000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.establishConnectionToDB()"}}],"line":41,"name":"Negative Test Cases. As a Digital Bank Admin I want to make sure users can not register without providing all valid data","description":"","id":"digital-bank-registration-page;negative-test-cases.-as-a-digital-bank-admin-i-want-to-make-sure-users-can-not-register-without-providing-all-valid-data;;13","after":[{"result":{"duration":1000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.closeConnectionToDB()"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":426000000,"status":"passed"},"line":23,"name":"User creates account with following fields","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_creates_account_with_following_fields(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)"},"rows":[{"cells":["title","firstName","lastName","gender","dob","ssn","email","password","address","locality","region","postalCode","country","homePhone","mobilePhone","workPhone","termsCheckMark"]},{"cells":["Mr.","Jack","Test","M","12/12/1990","random","random","Tester123","12 Main st","city","CA","","","","","",""]}],"keyword":"When "},{"result":{"error_message":"org.opentest4j.AssertionFailedError: the error message of required postalCode field mismatch ==> expected: <Please fill out this field.> but was: <>\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1152)\n\tat co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(RegistrationSteps.java:43)\n\tat ✽.the User should see the \"postalCode\" required field error message \"Please fill out this field.\"(classpath:ui/features/LoginAndRegistration/Registration.feature:26)\n","duration":20000000,"status":"failed"},"line":26,"name":"the User should see the \"postalCode\" required field error message \"Please fill out this field.\"","match":{"arguments":[{"val":"\"postalCode\"","offset":24},{"val":"\"Please fill out this field.\"","offset":66}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Registration"},{"name":"@NegativeRegistrationCases"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":385000000,"status":"passed"},"line":5,"name":"The user with \"jack@test.co\" is not in DB","match":{"arguments":[{"val":"\"jack@test.co\"","offset":14}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserWithIsNotInDB(java.lang.String)"},"keyword":"Given "},{"result":{"duration":2409000000,"status":"passed"},"line":6,"name":"User navigates to Digital Bank signup page","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_navigates_to_digital_bank_signup_page()"},"keyword":"And "}]},{"start_timestamp":"2023-12-10T21:56:31.015Z","before":[{"result":{"duration":1097000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.establishConnectionToDB()"}}],"line":42,"name":"Negative Test Cases. As a Digital Bank Admin I want to make sure users can not register without providing all valid data","description":"","id":"digital-bank-registration-page;negative-test-cases.-as-a-digital-bank-admin-i-want-to-make-sure-users-can-not-register-without-providing-all-valid-data;;14","after":[{"result":{"duration":1000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.closeConnectionToDB()"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":419000000,"status":"passed"},"line":23,"name":"User creates account with following fields","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_creates_account_with_following_fields(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)"},"rows":[{"cells":["title","firstName","lastName","gender","dob","ssn","email","password","address","locality","region","postalCode","country","homePhone","mobilePhone","workPhone","termsCheckMark"]},{"cells":["Mr.","Jack","Test","M","12/12/1990","random","random","Tester123","12 Main st","city","CA","99921","","","","",""]}],"keyword":"When "},{"result":{"error_message":"org.opentest4j.AssertionFailedError: the error message of required country field mismatch ==> expected: <Please fill out this field.> but was: <>\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1152)\n\tat co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(RegistrationSteps.java:43)\n\tat ✽.the User should see the \"country\" required field error message \"Please fill out this field.\"(classpath:ui/features/LoginAndRegistration/Registration.feature:26)\n","duration":20000000,"status":"failed"},"line":26,"name":"the User should see the \"country\" required field error message \"Please fill out this field.\"","match":{"arguments":[{"val":"\"country\"","offset":24},{"val":"\"Please fill out this field.\"","offset":63}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Registration"},{"name":"@NegativeRegistrationCases"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":386000000,"status":"passed"},"line":5,"name":"The user with \"jack@test.co\" is not in DB","match":{"arguments":[{"val":"\"jack@test.co\"","offset":14}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserWithIsNotInDB(java.lang.String)"},"keyword":"Given "},{"result":{"duration":2168000000,"status":"passed"},"line":6,"name":"User navigates to Digital Bank signup page","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_navigates_to_digital_bank_signup_page()"},"keyword":"And "}]},{"start_timestamp":"2023-12-10T21:56:35.362Z","before":[{"result":{"duration":1278000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.establishConnectionToDB()"}}],"line":43,"name":"Negative Test Cases. As a Digital Bank Admin I want to make sure users can not register without providing all valid data","description":"","id":"digital-bank-registration-page;negative-test-cases.-as-a-digital-bank-admin-i-want-to-make-sure-users-can-not-register-without-providing-all-valid-data;;15","after":[{"result":{"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.closeConnectionToDB()"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":453000000,"status":"passed"},"line":23,"name":"User creates account with following fields","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_creates_account_with_following_fields(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)"},"rows":[{"cells":["title","firstName","lastName","gender","dob","ssn","email","password","address","locality","region","postalCode","country","homePhone","mobilePhone","workPhone","termsCheckMark"]},{"cells":["Mr.","Jack","Test","M","12/12/1990","random","random","Tester123","12 Main st","city","CA","99921","US","","","",""]}],"keyword":"When "},{"result":{"error_message":"org.opentest4j.AssertionFailedError: the error message of required homePhone field mismatch ==> expected: <Please fill out this field.> but was: <>\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1152)\n\tat co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(RegistrationSteps.java:43)\n\tat ✽.the User should see the \"homePhone\" required field error message \"Please fill out this field.\"(classpath:ui/features/LoginAndRegistration/Registration.feature:26)\n","duration":19000000,"status":"failed"},"line":26,"name":"the User should see the \"homePhone\" required field error message \"Please fill out this field.\"","match":{"arguments":[{"val":"\"homePhone\"","offset":24},{"val":"\"Please fill out this field.\"","offset":65}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Registration"},{"name":"@NegativeRegistrationCases"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":387000000,"status":"passed"},"line":5,"name":"The user with \"jack@test.co\" is not in DB","match":{"arguments":[{"val":"\"jack@test.co\"","offset":14}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserWithIsNotInDB(java.lang.String)"},"keyword":"Given "},{"result":{"duration":2934000000,"status":"passed"},"line":6,"name":"User navigates to Digital Bank signup page","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_navigates_to_digital_bank_signup_page()"},"keyword":"And "}]},{"start_timestamp":"2023-12-10T21:56:39.674Z","before":[{"result":{"duration":1019000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.establishConnectionToDB()"}}],"line":44,"name":"Negative Test Cases. As a Digital Bank Admin I want to make sure users can not register without providing all valid data","description":"","id":"digital-bank-registration-page;negative-test-cases.-as-a-digital-bank-admin-i-want-to-make-sure-users-can-not-register-without-providing-all-valid-data;;16","after":[{"result":{"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.closeConnectionToDB()"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":432000000,"status":"passed"},"line":23,"name":"User creates account with following fields","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.user_creates_account_with_following_fields(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)"},"rows":[{"cells":["title","firstName","lastName","gender","dob","ssn","email","password","address","locality","region","postalCode","country","homePhone","mobilePhone","workPhone","termsCheckMark"]},{"cells":["Mr.","Jack","Test","M","12/12/1990","random","random","Tester123","12 Main st","city","CA","99921","US","2146591008","","",""]}],"keyword":"When "},{"result":{"error_message":"org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#agree\\-terms\"}\n  (Session info: headless chrome=119.0.6045.199)\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'\nSystem info: host: 'Mikes-MBP.attlocal.net', ip: '2600:1700:e1a0:2ac0:0:0:0:28%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '1.8.0_241'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 119.0.6045.199, chrome: {chromedriverVersion: 119.0.6045.105 (38c72552c5e..., userDataDir: /var/folders/z4/splffpjn0h9...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50628}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}\nSession ID: 1606fb23202793b8a3169e7f00504b1d\n*** Element info: {Using=id, value=agree-terms}\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)\n\tat org.openqa.selenium.By$ById.findElement(By.java:188)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\n\tat com.sun.proxy.$Proxy22.getAttribute(Unknown Source)\n\tat co.wedevx.digitalbank.automation.ui.pages.RegistrationPage.getRequiredFieldErrorMessage(RegistrationPage.java:227)\n\tat co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(RegistrationSteps.java:42)\n\tat ✽.the User should see the \"termsCheckMark\" required field error message \"Please check this box if you want to proceed.\"(classpath:ui/features/LoginAndRegistration/Registration.feature:26)\n","duration":5068000000,"status":"failed"},"line":26,"name":"the User should see the \"termsCheckMark\" required field error message \"Please check this box if you want to proceed.\"","match":{"arguments":[{"val":"\"termsCheckMark\"","offset":24},{"val":"\"Please check this box if you want to proceed.\"","offset":70}],"location":"co.wedevx.digitalbank.automation.ui.steps.RegistrationSteps.theUserShouldSeeTheRequiredFieldErrorMessage(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Registration"},{"name":"@NegativeRegistrationCases"}]}],"name":"Digital Bank Registration Page","description":"","id":"digital-bank-registration-page","keyword":"Feature","uri":"classpath:ui/features/LoginAndRegistration/Registration.feature","tags":[{"name":"@Registration","type":"Tag","location":{"line":1,"column":1}}]},{"line":1,"elements":[{"start_timestamp":"2023-12-10T21:56:49.530Z","before":[{"result":{"duration":2436000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.the_user_is_on_dbank_homepage()"}}],"line":4,"name":"Create a standard individual checking account","description":"","id":"creating-a-new-checking-account;create-a-standard-individual-checking-account","after":[{"result":{"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.closeConnectionToDB()"}},{"embeddings":[{"data":"iVBORw0KGgoAAAANSUhEUgAADwAAAAfQCAYAAAB/6qp1AAABLWlDQ1BTa2lhAAAokX2QPUjDUBSFP0tB/MFFRQeHOOmithWrBR1MwSJurUJ1S9NQxLaGNEWdu7q7OrvqqLs4CYKDOLi4C4JrPa8ZUpB6D5f7ce59ebkPErMokiloNMOgWLCt8uGRNfzBkNQLx235DA5N/bxGsy9L/8wNipGq13JVv5RhoMv1yap4qhbxueFKxJeGz0I/FF8bDvaLefGdeLHWx5U+dv3AzL+LNxv1thv/N+Ne86CkWlbOUeBUqlHHY4USJxzjiNLSDinWpCw5trF71fjrqsZdVT8n2WTUzyrzohwbpMx7Rld25mHrotvt3sfe3jPcPsDoW+wtfMLEEzxexV78xr4TOD0rqUx4NnxPa5UbmNS5sY7cGdMesKv1Z1eLXZq4LIsy2iNN9hcm/056/TWGNQAAIABJREFUeJzs3dlzXPeZ3+Fvd59eATRAgCAAAiQlj+zY8UyWi6Qqc5X//yaZzGQ8qbElUtwArth6P306FyBpS6YkUgt1RD9PFYtV6NN93tP43aE+9Tb+2z/+z1UAAAAAAAAAAAAAAAAAAIBaaP7cAwAAAAAAAAAAAAAAAAAAAH8mAAYAAAAAAAAAAAAAAAAAgBoRAAMAAAAAAAAAAAAAAAAAQI0IgAEAAAAAAAAAAAAAAAAAoEYEwAAAAAAAAAAAAAAAAAAAUCMCYAAAAAAAAAAAAAAAAAAAqBEBMAAAAAAAAAAAAAAAAAAA1IgAGAAAAAAAAAAAAAAAAAAAakQADAAAAAAAAAAAAAAAAAAANSIABgAAAAAAAAAAAAAAAACAGhEAAwAAAAAAAAAAAAAAAABAjQiAAQAAAAAAAAAAAAAAAACgRgTAAAAAAAAAAAAAAAAAAABQIwJgAAAAAAAAAAAAAAAAAACoEQEwAAAAAAAAAAAAAAAAAADUiAAYAAAAAAAAAAAAAAAAAABqRAAMAAAAAAAAAAAAAAAAAAA1IgAGAAAAAAAAAAAAAAAAAIAaEQADAAAAAAAAAAAAAAAAAECNCIABAAAAAAAAAAAAAAAAAKBGBMAAAAAAAAAAAAAAAAAAAFAjAmAAAAAAAAAAAAAAAAAAAKgRATAAAAAAAAAAAAAAAAAAANSIABgAAAAAAAAAAAAAAAAAAGpEAAwAAAAAAAAAAAAAAAAAADUiAAYAAAAAAAAAAAAAAAAAgBoRAAMAAAAAAAAAAAAAAAAAQI0IgAEAAAAAAAAAAAAAAAAAoEYEwAAAAAAAAAAAAAAAAAAAUCMCYAAAAAAAAAAAAAAAAAAAqBEBMAAAAAAAAAAAAAAAAAAA1IgAGAAAAAAAAAAAAAAAAAAAakQADAAAAAAAAAAAAAAAAAAANSIABgAAAAAAAAAAAAAAAACAGhEAAwAAAAAAAAAAAAAAAABAjQiAAQAAAAAAAAAAAAAAAACgRgTAAAAAAAAAAAAAAAAAAABQIwJgAAAAAAAAAAAAAAAAAACoEQEwAAAAAAAAAAAAAAAAAADUiAAYAAAAAAAAAAAAAAAAAABqRAAMAAAAAAAAAAAAAAAAAAA1IgAGAAAAAAAAAAAAAAAAAIAaEQADAAAAAAAAAAAAAAAAAECNCIABAAAAAAAAAAAAAAAAAKBGBMAAAAAAAAAAAAAAAAAAAFAjAmAAAAAAAAAAAAAAAAAAAKgRATAAAAAAAAAAAAAAAAAAANSIABgAAAAAAAAAAAAAAAAAAGpEAAwAAAAAAAAAAAAAAAAAADUiAAYAAAAAAAAAAAAAAAAAgBoRAAMAAAAAAAAAAAAAAAAAQI0IgAEAAAAAAAAAAAAAAAAAoEYEwAAAAAAAAAAAAAAAAAAAUCMCYAAAAAAAAAAAAAAAAAAAqBEBMAAAAAAAAAAAAAAAAAAA1IgAGAAAAAAAAAAAAAAAAAAAakQADAAAAAAAAAAAAAAAAAAANSIABgAAAAAAAAAAAAAAAACAGhEAAwAAAAAAAAAAAAAAAABAjQiAAQAAAAAAAAAAAAAAAACgRgTAAAAAAAAAAAAAAAAAAABQIwJgAAAAAAAAAAAAAAAAAACoEQEwAAAAAAAAAAAAAAAAAADUiAAYAAAAAAAAAAAAAAAAAABqRAAMAAAAAAAAAAAAAAAAAAA1IgAGAAAAAAAAAAAAAAAAAIAaEQADAAAAAAAAAAAAAAAAAECNCIABAAAAAAAAAAAAAAAAAKBGBMAAAAAAAAAAAAAAAAAAAFAjAmAAAAAAAAAAAAAAAAAAAKgRATAAAAAAAAAAAAAAAAAAANSIABgAAAAAAAAAAAAAAAAAAGpEAAwAAAAAAAAAAAAAAAAAADUiAAYAAAAAAAAAAAAAAAAAgBoRAAMAAAAAAAAAAAAAAAAAQI0IgAEAAAAAAAAAAAAAAAAAoEYEwAAAAAAAAAAAAAAAAAAAUCMCYAAAAAAAAAAAAAAAAAAAqBEBMAAAAAAAAAAAAAAAAAAA1IgAGAAAAAAAAAAAAAAAAAAAakQADAAAAAAAAAAAAAAAAAAANSIABgAAAAAAAAAAAAAAAACAGhEAAwAAAAAAAAAAAAAAAABAjQiAAQAAAAAAAAAAAAAAAACgRgTAAAAAAAAAAAAAAAAAAABQIwJgAAAAAAAAAAAAAAAAAACoEQEwAAAAAAAAAAAAAAAAAADUiAAYAAAAAAAAAAAAAAAAAABqRAAMAAAAAAAAAAAAAAAAAAA1IgAGAAAAAAAAAAAAAAAAAIAaEQADAAAAAAAAAAAAAAAAAECNCIABAAAAAAAAAAAAAAAAAKBGBMAAAAAAAAAAAAAAAAAAAFAjAmAAAAAAAAAAAAAAAAAAAKgRATAAAAAAAAAAAAAAAAAAANSIABgAAAAAAAAAAAAAAAAAAGpEAAwAAAAAAAAAAAAAAAAAADUiAAYAAAAAAAAAAAAAAAAAgBoRAAMAAAAAAAAAAAAAAAAAQI0IgAEAAAAAAAAAAAAAAAAAoEYEwAAAAAAAAAAAAAAAAAAAUCMCYAAAAAAAAAAAAAAAAAAAqBEBMAAAAAAAAAAAAAAAAAAA1IgAGAAAAAAAAAAAAAAAAAAAakQADAAAAAAAAAAAAAAAAAAANSIABgAAAAAAAAAAAAAAAACAGhEAAwAAAAAAAAAAAAAAAABAjQiAAQAAAAAAAAAAAAAAAACgRgTAAAAAAAAAAAAAAAAAAABQIwJgAAAAAAAAAAAAAAAAAACoEQEwAAAAAAAAAAAAAAAAAADUiAAYAAAAAAAAAAAAAAAAAABqRAAMAAAAAAAAAAAAAAAAAAA1IgAGAAAAAAAAAAAAAAAAAIAaEQADAAAAAAAAAAAAAAAAAECNCIABAAAAAAAAAAAAAAAAAKBGBMAAAAAAAAAAAAAAAAAAAFAjAmAAAAAAAAAAAAAAAAAAAKgRATAAAAAAAAAAAAAAAAAAANSIABgAAAAAAAAAAAAAAAAAAGpEAAwAAAAAAAAAAAAAAAAAADUiAAYAAAAAAAAAAAAAAAAAgBoRAAMAAAAAAAAAAAAAAAAAQI0IgAEAAAAAAAAAAAAAAAAAoEYEwAAAAAAAAAAAAAAAAAAAUCMCYAAAAAAAAAAAAAAAAAAAqBEBMAAAAAAAAAAAAAAAAAAA1IgAGAAAAAAAAAAAAAAAAAAAakQADAAAAAAAAAAAAAAAAAAANSIABgAAAAAAAAAAAAAAAACAGhEAAwAAAAAAAAAAAAAAAABAjQiAAQAAAAAAAAAAAAAAAACgRgTAAAAAAAAAAAAAAAAAAABQIwJgAAAAAAAAAAAAAAAAAACoEQEwAAAAAAAAAAAAAAAAAADUiAAYAAAAAAAAAAAAAAAAAABqRAAMAAAAAAAAAAAAAAAAAAA1IgAGAAAAAAAAAAAAAAAAAIAaEQADAAAAAAAAAAAAAAAAAECNCIABAAAAAAAAAAAAAAAAAKBGBMAAAAAAAAAAAAAAAAAAAFAjAmAAAAAAAAAAAAAAAAAAAKgRATAAAAAAAAAAAAAAAAAAANSIABgAAAAAAAAAAAAAAAAAAGpEAAwAAAAAAAAAAAAAAAAAADUiAAYAAAAAAAAAAAAAAAAAgBoRAAMAAAAAAAAAAAAAAAAAQI0IgAEAAAAAAAAAAAAAAAAAoEYEwAAAAAAAAAAAAAAAAAAAUCMCYAAAAAAAAAAAAAAAAAAAqBEBMAAAAAAAAAAAAAAAAAAA1IgAGAAAAAAAAAAAAAAAAAAAakQADAAAAAAAAAAAAAAAAAAANSIABgAAAAAAAAAAAAAAAACAGhEAAwAAAAAAAAAAAAAAAABAjQiAAQAAAAAAAAAAAAAAAACgRgTAAAAAAAAAAAAAAAAAAABQIwJgAAAAAAAAAAAAAAAAAACoEQEwAAAAAAAAAAAAAAAAAADUiAAYAAAAAAAAAAAAAAAAAABqRAAMAAAAAAAAAAAAAAAAAAA1IgAGAAAAAAAAAAAAAAAAAIAaEQADAAAAAAAAAAAAAAAAAECNCIABAAAAAAAAAAAAAAAAAKBGBMAAAAAAAAAAAAAAAAAAAFAjAmAAAAAAAAAAAAAAAAAAAKgRATAAAAAAAAAAAAAAAAAAANSIABgAAAAAAAAAAAAAAAAAAGpEAAwAAAAAAAAAAAAAAAAAADUiAAYAAAAAAAAAAAAAAAAAgBoRAAMAAAAAAAAAAAAAAAAAQI0IgAEAAAAAAAAAAAAAAAAAoEYEwAAAAAAAAAAAAAAAAAAAUCMCYAAAAAAAAAAAAAAAAAAAqBEBMAAAAAAAAAAAAAAAAAAA1IgAGAAAAAAAAAAAAAAA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AABgpDkBGAAAAACAT63Kysq0ucbGxtizZ0/U1NR0u2bt2rXD3dZlufRk4AvOnj0bo0aNGrL7bNu2LebMmRMzZ868rH2ampqioaEhZa64uDgmTpwYBQUF0dzcnJyvra2N1tbWGD169KDv9+GHH8YXv/jFbq8NRcAYAAAAAAAAAAAygROAAQAAAAD41JoxY0a38+vXr4/169fH9u3bo6ur6xPu6vJcGqa9YOzYsUN+r9/97ndx7ty5y9rj3XffTZubPXt2RES34eLNmzcPaP+cnJzIzf3475l2dHTERx991K9ehuOZAQAAAAAAAADAJ8EJwAAAAAAAfGqVl5dHTk5OdHZ2pl3bs2dP7NmzJyIiioqKYuLEiTF79uy45pprIjt74H8fc8OGDVFQUNBrTWVlZXz+858f8N4Xe/nll9PmLg3BDsacOXPio48+ikQikZzr6uqKRx99NP7+7/9+0Pu+9957aXMLFiyIiIj58+enXd+8eXMsX758QPe45pprYuvWrcnx3/72t2TI+IK6uro4ffp0yty8efPijTfeGNC9IiJOnDgRjz/+eJ91N998c48nNgMAAAAAAAAAwOUQAAYAAAAA4FPt61//ep9hzaamptixY0fs2LEjnnnmmZg2bVosX748pk6d2u/7HDt2rM+a48eP9ysA3N7eHi0tLclxS0tLHD16NF566aVobGxMq7807DoYY8eOjbVr18aGDRtS5k+cOBGvvvpqrF69esB7NjQ0RFNTU8rcqFGjorKyMiIiJk+enBbQvrCmqKio3/dZsWJFSgD48OHD0dLSEvn5+cm5t956K2XNpEmTYvTo0QN6Pxd0dHTE3r17+6ybN2+eADAAAAAAAAAAAMNCABgAAAAAgE+1adOmxT333BPr16/vV30ikUieDnzTTTfFypUrh7nDdG+99VZaYLU3a9asGZL7XnfddfHhhx8mT0a+4LXXXosZM2ZEdXX1gPZ755130uamT5+eMp46dWra/TZt2jSgwHFFRUUUFxenhKM3btwYN954Y3L8wQcfpKxZtmxZNDQ09PseAAAAAAAAAACQSbJHugEAAAAAALhcNTU18YMf/CBqamoGtO6VV16JF198cZi6unw5OTlx3333RUlJyZDtedddd6WcnHvBY489Fh0dHQPaa9u2bWlz1113Xa/jiIj33ntvQPeJiFi8eHHKeNOmTcnXO3fuTOk9JydnSE5NBgAAAAAAAACAkeIEYAAAAAAArgjl5eVxzz33RFdXV+zbty927NgRhw8fjrq6uujq6upx3dtvvx1r1qyJ3Nzef2Q+d+7cKC4u7rWmtLR0UL33tNd3vvOdKCwsHLI9IyJyc3Pj3nvvjYceeihlvrW1NX7729/2e5/jx49HS0tL2vyxY8fi+PHjyXFnZ2dazZkzZ6KhoSHKysr6fb/FixfHyy+/nBw3NTVFbW1tjBs3Lu005Wuuuabf+3YnPz8/Fi1a1Gfd5MmTL+s+AAAAAAAAAADQEwFgAAAAAAA+ce3t7X3WDPQ02guys7OjpqYm5TTg48ePx+bNm2Pz5s2RSCTS1uzbty9mzJjR674rVqyIqqqqQfV0qZycnCgoKIiIiEQiEWfPnk2rmTp16pCHfy+orq6OG2+8MV577bWU+T179vR7j3feeafb+VdeeaVf6zdu3Bi33nprv+83atSomDJlShw8eDA59+abb8Ydd9wRhw4dSqm94YYb+r1vd8rKymLNmjWXtQcAAAAAAAAAAFyO7JFuAAAAAACAK1t3J+teGtjszsWnyF6Ql5c3qB7Gjx8fd9xxR/zwhz+MrKystOu7du0a1L6DdcMNN8SPfvSj+NGPfhQ//vGPuz1ZeMuWLd0Gg4fK6tWrLyvQvH379su6/7Zt2wa8Zvny5Wk9XBpELi4ujoqKisvqDQAAAAAAAAAARpoAMAAAAAAAw6qkpCRtrrtw78U6Ojq6Db+WlZWljJ944on49a9/nfx65JFHoq2trcd9S0tLY/z48WnzLS0tvfYz3G6//fZu559//vlhve/9998f2dkD/6eCgwcP9usU5940NzdHbW3tgNbMmDEjJVDe1dUVr776akrN4sWLL6svAAAAAAAAAADIBALAAAAAAAAMq3HjxqXNtba2xgsvvNDjmscff7zb+QkTJqSM9+3bFwcPHkx+HThwIN54440e900kEt2GTsvLy3tc80mYMWNGlJaWps3v2LEjGhoahu2+hYWFsW7dugGvu/TU3QvmzJnT49dA9unN3Llze72+aNGiAe8JAAAAAAAAAACZJrfvEgAAAAAAGLwlS5bE66+/nja/cePGaGlpiaVLl0Z1dXV0dXXFoUOH4tVXX42DBw+m1efm5saMGTNS5qqqquLo0aMpc2+88Ua0tLTErbfeGjk5Ocn5hoaGeOyxx6Krqytt76uuuqrP97Fz586oq6vrs27y5MlRVFTUZ92lbr/99li/fn3a/LPPPhsPPPDAgPfrr5kzZ8bcuXNj27Zt/V6za9eutLlVq1bFqlWrelzz4osvxttvv50yt3379li7dm3/m42IFStWxJYtW7q9NmXKlBg9evSA9utOU1NTbN++vc+6/Pz8uPrqqy/7fgAAAAAAAAAAcCkBYAAAAAAAhtWYMWOipqYm9uzZk3Zt27Zt/Q6eLl++PG1u9erV3YZmN23aFJs2bYr8/PwoKCiIpqamaG9v77G//oQ4X3nllX71ecstt3Tba19qamqirKws7cTfAwcOxPHjx2P8+PED3rO/vvjFL8a+ffvi7Nmzfdbu3r07Ojs70+bnz5/f67oFCxakBYDb2tri0KFDMXny5H73WlZWFqWlpXHq1Km0a8uWLev3Pr05c+ZMPPXUU33W5ebmxk9+8pMhuScAAAAAAAAAAFwse6QbAAAAAADgyrdu3booLCwc9Prq6upYvXp12nxNTU2vp/e2tLREQ0NDj+HfiIgvfelLg+5rqH3hC1/odn7Dhg3Det/s7Ox+nzK8cePGtLnCwsIoLi7udV1lZWW3p/O+8847/WvyIosXL06by83NjZkzZw54LwAAAAAAAAAAyEQCwAAAAAAADLu8vLz4u7/7uygrKxvw2ilTpvQaTr3//vt7DQH3Zt26dTFt2rRBrR0OU6dOjYqKirT52tra2L9//7Deu6KiIm699dZea7q6umLv3r1p87NmzerXPWpqatLmdu7c2b8GL7Jw4cK0uWuvvXbA+wAAAAAAAAAAQKYSAAYAAAAA4BMxduzY+OEPfxhr1qyJ/Pz8PuuLi4vjy1/+cnzzm9+MvLy8HuuysrLigQceiHXr1kVRUVG/eqmpqYkf//jHMXv27H733185OTkp4+zs9B/FX1pzsZ5OAX7ppZf63cNA73nB0qVLY/LkyT1e379/fyQSibT5BQsW9Kuv+fPnp811dnbG0aNHk+NLe8/KykpbM2rUqLTQ94oVK9LqunvPl+7f3bPqr+56AwAAAAAAAACAoZB1/cqb039TBwAAAACAIfe31/of4PwsOHHiROzZsycaGxvj3LlzkUgkoqioKEpLS2PWrFlRXFw8qH2bmprio48+ioaGhmhqaoqI84HRoqKimDRpUkybNu2yQp8AAADwWbbsxltGugUAAAAAgM+E3JFuAAAAAACAz6aqqqqoqqoa8n2LiopiyZIlQ74vAAAAAAAAAADAJ8URBwAAAAAAAAAAAAAAAAAAkEEEgAEAAAAAAAAAAAAAAAAAIIMIAAMAAAAAAAAAAAAAAAAAQAYRAAYAAAAAAAAAAAAAAAAAgAwiAAwAAAAAAAAAAAAAAAAAABlEABgAAAAAAAAAAAAAAAAAADKIADAAAAAAAAAAAAAAAAAAAGQQAWAAAAAAAAAAAAAAAAAAAMggAsAAAAAAAAAAAAAAAAAAAJBBBIABAAAAAAAAAAAAAAAAACCDCAADAAAAAAAAAAAAAAAAAEAGEQAGAAAAAAAAAAAAAAAAAIAMIgAMAAAAAAAAAAAAAAAAAAAZRAAYAAAAAAAAAAAAAAAAAAAyiAAwAAAAAAAAAAAAAAAAAABkEAFgAAAAAAAAAAAAAAAAAADIIALAAAAAAAAAAAAAAAAAAACQQQSAAQAAAAAAAAAAAAAAAAAggwgAAwAAAAAAAAAAAAAAAABABhEABgAAAAAAAAAAAAAAAACADCIADAAAAAAAAAAAAAAAAAAAGUQAGAAAAAAAAAAAAAAAAAAAMogAMAAAAAAAAAAAAAAAAAAAZBABYAAAAAAAAAAAAAAAAAAAyCACwAAAAAAAAAAAAAAAAAAAkEEEgAEAAAAAAAAAAAAAAAAAIIPkjnQDAAAAAAB8Npxrbom6hsZoaW2LltbW6OzsGumWAAAAoE85OdmRP3p0FIweFeVlxVFYkD/SLQEAAAAA8BkgAAwAAAAAwLBKJBJxtLYuak82jHQrAAAAMGCdnV1x9lxznD3XHCcbTsf4yrKYMK4isrKyRro1AAAAAACuYALAAAAAAAAMq517D8a55taIiCgrGRulxUUxprAgcnNzRrgzAAAA6FtHR2ecPdccpxqbouH0mTh+siHOnG2OWTVTRro1AAAAAACuYALAAAAAAAAMm2O1dXGuuTVyc3Pi6snVUTSmYKRbAgAAgAHJzc2JkuKiKCkuivLS4th/6Fica26JY7V1MWFcxUi3BwAAAADAFSp7pBsAAAAAAODK1NzSGsdO1EdExLQpE4V/AQAA+NQbW1QYV0+ZEBERx07UR3NL6wh3BAAAAADAlUoAGAAAAACAYXGi7lRERFSUlcSYwvwR7gYAAACGRtGYwigvLY6IiLr60yPcDQAAAAAAVyoBYAAAAAAAhkVLa1tERJQWF41wJwAAADC0Lvy/7oX/9wUAAAAAgKEmAAwAAAAAwLBoaW2NiIhCp/8CAABwhSkoGB0RAsAAAAAAAAwfAWAAAAAAAIZFV1ciIiJysv0oGgAAgCtLXm5uRER0dHaOcCcAAAAAAFyp/NYVAAAAAAAAAAAAAAAAAABkEAFgAAAAAAAAAAAAAAAAAADIIALAAAAAAAAAAACRwTV4AAAgAElEQVQAAAAAAACQQQSAAQAAAAAAAAAAAAAAAAAggwgAAwAAAAAAAAAAAAAAAABABhEABgAAAAAAAAAAAAAAAACADCIADAAAAAAAAAAAAAAAAAAAGUQAGAAAAAAAAAAAAAAAAAAAMogAMAAAAAAAAAAAAAAAAAAAZBABYAAAAAAAAAAAAAAAAAAAyCACwAAAAAAAAAAAAAAAAAAAkEEEgAEAAAAAAAAAAAAAAAAAIIMIAAMAAAAAAAAAAAAAAAAAQAYRAAYAAAAAAAAAAAAAAAAAgAwiAAwAAAAAAAAAAAAAAAAAABlEABgAAAAAAAAAAAAAAAAAADKIADAAAAAAAAAAAAAAAAAAAGQQAWAAAAAAAAAAAAAAAAAAAMgguSPdAAAAAAAADIUNz/85tn340YDXlZWWxj987/5h6OjT7//72S/j7NmzERFx5223xHVz5/R77YMPr4+TJ+siImLVDcti5fIlw9JjJmlta4uf/o+fJ8efv3lVLFl4Xb/XX/y8v3LnbTFn9owh7xEAAAAAAAAAgE8HAWAAAAAAAK4IzS0tkUgkBrVuuBw+cixee2tjRESUFo+N2z9/07Ddazi0trYmn2lrW9uA1jY3f/x5tLS0Dnlvmairqyvle/BPL70a06dNjdKS4n6tv5znDQAAAAAAAADAlSV7pBsAAAAAAICRlJOTM2x7Hz1eG3v37Y+9+/bH+4M4nZhPv8ee/MNItwAAAAAAAAAAwKeQE4ABAAAAALjiTJpYHd+6d91ItwFx+vTpeOnVN+KW1TeMdCsAAAAAAAAAAHyKOAEYAAAAAABgGP3tnU1x7PiJkW4DAAAAAAAAAIBPEScAAwAAAADARc6da47aEycjIqKoaExUVpRHRERra1vs3rs/9h88HEVjCmPC+KqYPGliFOSPTtvj4KEj0dnZmRL67OzsjH37DybHZWWlUVI8ttsezjSdjT1798fJ+oZobW2LstKSmDCuMqZdfVWPfXd1dcWBg4cjIiI3NzcmT6qOiIjmlpbYuWtvHDx8NPLy8uLWm2+M7OzM+vug5841x8FDR+LA4SORnZUdkydOiIkTx8fYoqJ+71F74mQcOHQk6uoaIiKiorwspkyeGOPHVfZ63+4+64ZTp2PHrj1x4mR9jKusiGVLF17Guzvv8d/+IX70g+9FTs7QPPvTjWfi8JFjcfRYbXQlumLyxOqYMnliFI0p7HFNT98jbW3tsXP33jhw6HCUlpTEVZMnxqSJE9LWHz12PA4dPhYn6uqjsrwspl09JaoqK/rd8959B+JY7cloOHU6Ro8eFRXlZTF92tQYWzRmgO8eAAAAAAAAAODKJwAMAAAAAAAX2bh5a7z+1jsREVFRUR7fue/u+MWv18epU6e7rb9l9cq0gOgjv3kqra6rqyse/+0fkuPZs2bE1754e0rNuXPN8fQfX4gDBw91e69Ro0bF525aGQuuuzbt2omTdSn7/5//+3+PBx9eH3V19Sl1a1Ytj9GjRnW7/yftZF19PPKbp6O5uTll/p1NWyIioqioKO67+ytRUV7a4x5Hjh6PPzz3Ypw6darb66WlJfGVO2+N6gnj065d+lnf/ZW18YuHH4/29vZkzZ6CgkEHgK9fsjDe3rg5IiJaWlrimedfjK+uvW1Qe11w6PDReOLpP0Zra2vK/Lubt0bE+WDv17+6NqZeNTlt7aXfI//X//GP8ev1T8Whw0fSasePGxdf/9raKBpTGCdO1sVTz/xn1Dc0pNS89GpETk5OfOveu2LC+Koee96y9YP48yuvR1tbW7fXp0yeFF/70u1RWFDQ8xsHAAAAAAAAAPiMyaw/8Q8AAAAAABkk0ZWIhx55osfwb0TES6++Hn/+y+uXfa+6+lPxPx98uMfwb0REW1tbPPenl+NPL/21z/1++4fn0sK/mWTbhzvi5798LC38e7Gmpqb494ceiQ+27+z2+vaPdsWvHnuyx/BvRMSpU6fjl48+GR/t3NNrP52dXfGrx55MCf9erqWL5qcEj7d/tDP27N0/6P3+8tc349frf5cW/r1YR0dHPPbk7+P9Dz7qc78//udL3YZ/IyKO19bGLx99Mk43nolfPLw+Lfx7QWdnZ/zy0SeSJylf6j9ffCWe+9PLPYZ/IyIOHjoc//PnD0dDL/+dAQAAAAAAAAB81ggAAwAAAABAD+obGpLBx/HjxsWK65fEqhuWxaSJ1Sl1b7+7Oc40nU2OV92wLFYuXxoTq1PrVi5fmvxasmBecr6rqysefvy3KeHT/Pz8mD1rRixbuiiqqipT9tm4+b0+A6279+yLiPMntI4fPy7mXTsnZs6oidyc3AE8geFxpulsPPPcn1Lmrl+8MO7+ytq4/XNroubqqZGVlZW89vyLf0nbo+HU6Xj6j/+ZMldcXByL5s+LBdfNjeLi4pRrTz3zXDSdPddjT6dOnUqGkUeNGhVTr5oS866dE3OvmTXg93exb6z7YuTk5CTHv3vm+Wht7TkM25MzTWfjzbffTY6zsrJi0sTquGHZkrhl9cqYNWN6Sv2G51+Mtj7CzFu3fRgREePHj4sbV1wf866dE3l5eR/f88yZ+F8PPhyJRCIiIiZWT4gbV1wfi+bPi6KiomRdIpGI5198JW3/zVs/iE3vvZ8yV1VVGcuXLo7ZM6dHfn5+cr69vT0e+c3TfT0GAAAAAAAAAIDPjJH/LR8AAAAAABhizc0tcbz2RL9qqyorIju797+X+cA3vhZTJk9Mjm9csTQ2b/0gnv/Ty8m5TVvej5tuXJ68HhFRUPBeHDl6NCIi8vLyYvXKZd3u/9Krb0RLS0tyPO/aOfHFOz6XHN+y+oY4cbIufvHw+mQYc8PzL8bsmTW99n3pPpnivfc/TBn/4O++FWWlHwd2Fy2YGzt37Y3f/uHZiDh/8vGOXXti1oyP3++TTz+bssfXvnhHzJ6VGoLd/N62lPDw7//4Qjzwja/22tuXvnDrZYd+L1aQnx9fWXtb/O4Pz0XE+RN6n3j6j/HNe742oH3+/ErqKdPffeAbMX5cajD8xMm6ePBXjyfHe/ceSHsml/rq2ttjzuwZyfHn1qyMn/3Ho8kw9IXvt7u/sjZmTL86WXfrLaviwV+tj7r6+uS9L9ba1hYv/PnjUHB2dnZ8/7sPpHzOEec/x1179kbE+ROf3964Ja5fsqDXngEAAAAAAAAAPgsEgAEAAAAAuOLUNzTEf/z6N/2qvf/rX42rpkzq8fqdt92SEv69YOF118brb22MM2fORETEiZP1g2s2IrZs/SD5emJ1dbeh3arKirj7q2vjiac2RMT5E1P37T8YV0+d0u2eM2fUZGT4NyKiruFU8vWYMWPSQqERETNnTIt1X/5C1NWfr60oL09eO914Jhk8jYhYvXJ5t0HXhfPnRu3J+ti0ZWtERBw8dDg6OjojNzcnrTYiYu3tnxvS8O8Fs2bUxKwZ02PHrt0REXHo8JHYsvWDWHDdtf3eY+7smTGusiIiIqZMqk4L/0ac/x6ZMnlSHDx0OCIidu7Z12sAeOF1c1PCvxHnA8urb1gW//nnj4PTixdelxL+jTgf6L3tllXx2JO/j4jz34/NLa1RkD86IiLe3/ZRdHV1Jesf+MbXuv2c7/rKF+LfH3osedL2u++9LwAMAAAAAAAAABARvR9pAAAAAAAAn3HXzpnZ47Upkz4OBjecOj2o/Y8dPxHt7e3J8W23rOqxdvq0qZGfn58cv7dte4+1i+fPHVQ/n4TxVR+HV8+ePRu7du/rtm7WjJq4YdniuGHZ4qgoL03OXxyYzsrKipXLl/R4r5tuTD11edfuvT3WDkf494Iv33lrjB49Ojl+/sW/ROOZpn6vnzH96uSzmDypuse6qv8KCUdEnKxr6HXPnt5vzbSrUsZzZnYfIq6uHp8ybmxsTL6++HtzXFVVTJo4ods9srKyYsX1i5LjU6dOR1tbe7e1AAAAAAAAAACfJU4ABgAAAADgipOVlRUlJemnjXZnzJjCHq/l5+dHbm7PP0ovLytJvm7v6Oh/gxc5cvR4yri9vT0OHT7ar7UNpxt7vNbbqcYjbUbN1Hj51deT4yd//8coLyuLBfOuiVkza6K0j8/uWO2JlHF/n1dExMn67kOxJSUlkZ09fH83NTc3J+5Z96X41WNPRkREIpGIx5/8Q/zD9+4f9J4tra1x7lxzNDe3RHNzS5xrbo4Ptu/o9/qeQrmjRuWljCdMGNd9XV5et/MREQ2nPj7lOSs7a0Cf0anTp2NcVfoJxwAAAAAAAAAAnyUCwAAAAAAAXHEmVk+Ib9277rL36S0cHBGR10s4uL9OnzmTMn7kN0/1e+3Zs+d6vDacYdbLVVFeFjcsWxJv/G1jcq6+oSFeevX1eOnV1yM3NzemXjU5Vixd1O1pt2eaziZfJxKJ+PX63/X73j2dupubmzOAdzA4E6vHx9JFC+KdTVsi4vx7/usbb8eqG67v9x4bN2+ND7bvimPHj0dXV9dl9ZOVldW/ukHsffGp1seP1w7sM2psEgAGAAAAAAAAAD7zBIABAAAAAGAENTe3DHptxyBPHR6MRFdiSPe76cblUVI8Nl57a2OcuSQE3dHREbv37Ivde/ZFQUFBfPeBr0dJ8djk9dbWtkHft+2iYOpI+PzNN8aO3XujsfH86c2vvfl2zJ5ZE1WVFb2ua21ti0ef+H0cr639JNocUW3tg/98AQAAAAAAAACuFALAAAAAAAAwgsYUpp4yfMvqlb3Wd3R2RlZWVuRkZ6eEYofDxacIHz52PPp/Tm1EU9PHJ+3m5XX/zxELrrs2Flx3bdTVN8SWrR/G3gMHo66uPhKJj8PGzc3N8e8PPRrf/+79yfebnz86GRrOysqKm1fd0Gsvbe3tMSovLyKi2xOFP2n33f3l+Ldf/Do5fvSJ38ePfvDdXtc89OiT0dDQkBzn5ubGhPHjoqK8LIrGFEZBfn4UFhbE397dEseOHR+23vsrKysr+TmOHzcurp09o9f6iz+jKZMnDXt/AAAAAAAAAACZTgAYAAAAAABGUPHYopTxkkXzIycnu4fqT9aYwsJobW2NiIiDh470e92Ro6kB1LLSkl7rK8rL4nNrPg4+79l3IP78yutRV1cfEedPBN783rZYs2pFRESMHTMmTpw4GRERRUVFsWzpwn73lgnKSkvi82tWxYt/+WtEnA85P/vCyz3Wt7W1p4R/58+7Nr5w65rIyspKq92z70BGBIDz8vKire38Sb7jqio+dZ8RAAAAAAAAAMBIy4zfIAIAAAAAgCvcxafaXmzypAkp4yNHj30S7fRLeXlp8vW5c+eiuaWlX+u279idMh5XVTGg+9ZcfVV8/zv3xahRo5Jzu/cdSL6eNPHjZ3bmzJken20mW7p4fkyYMD45fv+D7dHe3t5t7Y5de5Kvs7Oz487bbu42/BsRsXf/waFtdJAqK8qTrw8fyZzvaQAAAAAAAACATwsBYAAAAAAAGCYXhzQ7Ojq6ramqrIjRo0cnx7975vloa+s+CBoR8eTvn41//fnD8a8/fzjeemfT0DXbjWWLF6SM//2hx6K5pbXXNR/t2B1vv7s5OS4oKIhxVZUpNY/85ul48OH18YuHfxMfXRIWvtj4cVXJ150dncnX8+ddk1L3xFN/7HGPltbW+PmvHk8+s0wKo37ja2sjJyenz7rW/zpJty9Hjx2Ps2fPXm5bQ2LBRZ9RfUNDvLv5/R5rDx0+mvx8/tcvHomurq5PokUAAAAAAAAAgIwmAAwAAAAAAMOkvLQkZfzXN97uNty4bMnC5Ovm5uZ46JEn0k7bbW1riyeffjZ27d4bjY2N0djYGNXjxw1P4/9lyuSJUVRUlByfO3cufvYfj0R9w6m02q6urti89YN4asPzKfMrli5Kq21uaYkTJ05G7YkT8dSG5+PEybq0mn37D8bBQ4eT43HjPg4RF40pjInV1cnxnn3749kXXo6Oi0LCERH1DafiFw//Jk6erIvGxsY4c+ZMVA3wNOLhVFhQEF++87Y+62bPnJ583dXVFX/+y+tpNbt274tfPvrkkPZ3Oa6dMzNyc3OT4xdeeiW2fbgjrW733v3x2JO/T35PZ2VlRXa2f74CAAAAAAAAAMjtuwQAAAAAAD5dDh85Gv/3//Ov/aotLy+L73/nvmHpY9xFJ9hGRLz25tvx+lvvRHl5WSy87tpYumh+RESsXL4ktrz/YTQ2NkbE+RNT/99/fTAKCgqirLQ0Wltbo76hIRKJRHKv8ePGxVVTJg1L3xd74BtfjZ/9xyPJezc3N8fP/uORyM7OjqrKyiguLopjx0/EmTNn0tZOrJ4Qy5YuTJtfteL6eOqZ55LjB3/1eBQXF8dVkydGbk5OHD1+Io7X1qasuXnVipTxui/fEf/jZw8l+3rv/Q/ivfc/iJKSkhhTWBhnz52L06dPp6y5YdmSGJWXN7gHMUxmz6yJWTNqYseuPT3WFI0pjIKCgmhubo6IiLff3RzvbNoS1RMmRG5uThw7Xhtt/Twl+JOSm5sbX117ezz5+49PZ37muT/FhudfjPKyssjPHx31DaeS7+mCO29d80m3CgAAAAAAAACQkfwJdQAAAAAArkiJRKJfX+fONfe92SCNKSyIWTOmp8wlEomoq6uPQ0eOpcx/75tfj5KS1BODm5ub48jRo1FXX58S/q0oL49v33fXsPV9sbLSkrjv7q+knOYacf4k2uO1tbFz154ewr/Vce/dX+52z9kza2LR/Hkpc42NjfH+B9tj89ZtKeHfvLy8+M79d0dJ8diU+qIxhfHt++6OnJyclPnTp0/HkaNH08K/i+bPi9Url/X9hkfAl++8NUaNGtVrzT3rvpTyXhOJRBw5ejQOHDyUDP/m5+fHgnnXDmuvAzFj+tVx++duSplLJBJRV18fh48cTQv/fu1LX4gpkyd+ki0CAAAAAAAAAGQsAWAAAAAAAK4IOdmD+5F39iXrLh5fei1tbc7FtVnd1nxl7W3x+TWrori4OGU+K1LrC/Lz4wffuz9WLl/aYxi0oKAg7rztlvj+d++LnJye+87K6r6XwbpqyqT40Q++F7NnzejzmYwZMyZu/9xN8e371vV62u7tn78pvnnPurTnckFeXl5Mr7k6fvSD70X1hPHd1lRPGBf//e+/HdfMmdXje66srIhv3XtX3P75m9KuDeSz7o9Le+jvnrm5uXHPui/1unbC+Kr44X/7VlRWVnS7x5xZM+MHf/fNKCjIv2iPnvvp7Xsk/Vr/art7v4sWzIvv3P/1mDyp52DvjOnT4n/7/ndi9syaHmsAAAAAAAAAAD5rsq5feXOi7zIAAAAAAC7X3157aaRb+ERt3rYzIiIWzp05wp1kjpbW1mhv74hEIhHFY4t6rW080xT19Q3R3t4RRUVjorKyPPIuOYV3JCQSidiz70CcOFkfjY1norOrK0aPHhWlxcUx9apJUVFeNqh9T51ujPr6hsjNzY3q6vEDfq9dXV3RcKoxGhpORVZ2VpQUj43ystIhCfZmohMn6+LU6cYYW1QUVZUVaYHwTNTe0RH19afiTFNTZGVlRWVFedrJzgAA8GnyWf3/3mU33jLSLQAAAAAAfCaM/G8KAQAAAADAZ0T+6NGRP3p0v2qLxxb1GRIeCVlZWTF92tSYPm3qkO5bWlIcpSXdnwbcH9nZ2VFRXhoV5aVD2FXmqqqsiKoeTgPOVHm5uTF+XGWMH1c50q0AAAAAAADA/8/evX5XXZ/5w79yPpCQhAAJ4RhEjlKLyEFEra3adpxW29qpOj+rd51f557pdHXNg/u/mDX3g+n07rROD4x2Wmu7nJ/1VKmoVdEqRUFAAgJJOATIAUjI+XA/oGzZ7L2TWInZ0tdrLZf7e30O3893Zz9JyDsXAGS97P9z8AAAAAAAAAAAAAAAAAAA8BdEABgAAAAAAAAAAAAAAAAAALKIADAAAAAAAAAAAAAAAAAAAGQRAWAAAAAAAAAAAAAAAAAAAMgiAsAAAAAAAAAAAAAAAAAAAJBFBIABAAAAAAAAAAAAAAAAACCLCAADAAAAAAAAAAAAAAAAAEAWEQAGAAAAAAAAAAAAAAAAAIAsIgAMAAAAAAAAAAAAAAAAAABZRAAYAAAAAAAAAAAAAAAAAACyiAAwAAAAAAAAAAAAAAAAAABkEQFgAAAAAAAAAAAAAAAAAADIIgLAAAAAAAAAAAAAAAAAAACQRQSAAQAAAAAAAAAAAAAAAAAgiwgAAwAAAAAAAAAAAAAAAABAFhEABgAAAAAAAAAAAAAAAACALCIADAAAAADAhMjPz4uIiMHBoUk+CQAAAFxaA3/6Xvf8974AAAAAAHCpCQADAAAAADAhSouLIiKip7dvkk8CAAAAl1ZPT29EvP+9LwAAAAAAXGoCwAAAAAAATIiSP/0SdGv76Uk+CQAAAFxaJ9tPRUREaUnxJJ8EAAAAAIDLlQAwAAAAAAATonpaZeTkRJzu7Iqus92TfRwAAAC4JM50no3Oru7IycmJaVUVk30cAAAAAAAuUwLAAAAAAABMiMKC/Jg1c3pERBw63CIEDAAAwMdeZ1d3NB05HhERdTXVUViQP8knAgAAAADgcuUn0AAAAAAATJiZ06vi1Jmu6O7pjf2HjkRVRXlUVZRHaWlx5OflTfbxAAAAYEwDA4PR3dMbp850RcfpzoiIKC0pjhnVVZN8MgAAAAAALmcCwAAAAAAATKgr6+dEy4m2ON7aER2nOxO/LA0AAAAfRzXTq6J2ZvVkHwMAAAAAgMucADAAAAAAABMqJycnZtVMj4qpZdHWcSZ6+/qjt68vhoaGJ/toAAAAMKa8vNwoLiqKkqLCmFY1NUpLiif7SAAAAAAA/AUQAAYAAAAA4CNRWlLsl6QBAAAAAAAAAADGIXeyDwAAAAAAAAAAAAAAAAAAALxPABgAAAAAAAAAAAAAAAAAALKIADAAAAAAAAAAAAAAAAAAAGQRAWAAAAAAAAAAAAAAAAAAAMgiAsAAAAAAAAAAAAAAAAAAAJBFBIABAAAAAAAAAAAAAAAAACCLCAADAAAAAAAAAAAAAAAAAEAWEQAGAAAAAAAAAAAAAAAAAIAsIgAMAAAAAAAAAAAAAAAAAABZRAAYAAAAAAAAAAAAAAAAAACyiAAwAAAAAAAAAAAAAAAAAABkEQFgAAAAAAAAAAAAAAAAAADIIgLAAAAAAAAAAAAAAAAAAACQRQSAAQAAAAAAAAAAAAAAAAAgiwgAAwAAAAAAAAAAAAAAAABAFhEABgAAAAAAAAAAAAAAAACALCIADAAAAAAAAAAAAAAAAAAAWUQAGAAAAAAAAAAAAAAAAAAAsogAMAAAAAAAAAAAAAAAAAAAZBEBYAAAAAAAAAAAAAAAAAAAyCICwAAAAAAAAAAAAAAAAAAAkEUEgAEAAAAAAAAAAAAAAAAAIIsIAAMAAAAAAAAAAAAAAAAAQBYRAAYAAAAAAAAAAAAAAAAAgCwiAAwAAAAAAAAAAAAAAAAAAFlEABgAAAAAAAAAAAAAAAAAALKIADAAAAAAAAAAAAAAAAAAAGQRAWAAAAAAAAAAAAAAAAAAAMgiAsAAAAAAAAAAAAAAAAAAAJBFBIABAAAAAAAAAAAAAAAAACCLCAADAAAAAAAAAAAAAAAAAEAWEQAGAAAAAAAAAAAAAAAAAIAsIgAMAAAAAAAAAAAAAAAAAABZRAAYAAAAAAAAAAAAAAAAAACyiAAwAAAAAAAAAAAAAAAAAABkEQFgAAAAAAAAAAAAAAAAAADIIgLAAAAAAAAAAAAAAAAAAACQRQSAAQAAAAAAAAAAAAAAAAAgiwgAAwAAAAAAAAAAAAAAAABAFhEABgAAAAAAAAAAAAAAAACALCIADAAAAAAAAAAAAAAAAAAAWUQAGAAAAAAAAAAAAAAAAAAAsogAMAAAAAAAAAAAAAAAAAAAZJH8yT4AAAAAAABkq+7u7ti/f3+cOXMmOjs7Iz8/P6ZOnRrV1dWxcOHCyM394H9ns7W1NZqamuLMmTPR3d0dJSUlUV5eHnV1dVFXVzcBTzHxTp8+HcePH4+Ojo7o6OiIgoKCqKqqimnTpkVdXV0UFhZO9hEBAAAAAAAAAOBjRQAYAAAAAIAJ9V//9V9x9OjRGBkZSarn5OQkXefl5UVJSUnU1NTEunXrYu7cueO+x+uvvx4vvPBCRETSfaZMmRLf/va3P/CZ9+3bF5s3b47Tp0+POm/BggVx++23R3l5+Zh7vvzyy/HGG29EX19fxjl5eXmxcuXKuOWWWyI/P/lH+Js3b45t27Yl1crLy+Mf//EfM+73r//6rzEwMJC4rquri/vuuy/t3OHh4fiXf/mXlK/THXfcEUuXLk2ZPzIyEjt27IjXXnstOjo6Mp4hImLhwoWxcePGMQPO5z8rY8nNzY3CwsKoqKiIFStWxMqVK6O4uDjt3GPHjsWmTZvGtWdJSUlMmTIl5syZE2vXro2Kioox1wEAAAAAAAAAwEQQAAYAAAAAYEL19PSkhEojIqU2ODgYnZ2d0dnZGfv374/6+vr42te+Nq57bN++Pe09zp49G4cPH445c+aMa5+RkZH4xS9+EYcOHRrX/EOHDsW///u/x+233x4rV65MO6erqyt+/OMfx9mzZ8fcb2hoKN56663YtWtX3H///TF9+vTEWE1NTcoznjlzJvr7+9N22D1+/Hj09/cn1Y4cORIjIyMp4evzY8PDwyn1dKHd7u7u2LRpU5w6dWrMZ4qIOHDgQBw4cCCuvvrq+PznP59xXqbPysWGhoaip6cnenp6oqWlJZ5//vm45ZZbYvXq1Slz+/v7x71nV1dXdHV1xfHjx2Pbtm0xbdq0uOuuu2LatGljrgcAAAAAAAAAgEspd7IPAAAAAAAA6Rw8eDB+9rOfjRne7OzsHDWIenHX3NH8/Oc/H3f490JPPvlkNDQ0pNT7+vrioYceGlf490IDAwPx4x//OM6cOZOoLV68OO3cpqamtPV051o0tosAACAASURBVImIaG5uTltP99xFRUUxderUpNrx48fje9/73rjDvxd6++2340c/+lHaoPGHMTIyEs8991y8+OKLl3Tf9vb2+MEPfhC7du26pPsCAAAAAAAAAMBYBIABAAAAAMhaTU1N8fDDD486Z6yAb6Yg7MX2798fjY2NGceLi4sjPz8/4/hvfvOblLDy7373u+jt7U07PycnJ0pLSyM3N/2P6oeGhuKpp55KXBcVFUVZWVnKvIMHD6Zd/95776Wt7927N2093bPPnTs35Uz//d//HYODg2n3GI8TJ07E008//WevH83WrVvj8OHDl3zfJ554IuP7DAAAAAAAAAAAEyHzbyoBAAAAAMAEqa+vj+uuuy4izoVKW1tbo6GhIW132iNHjkRzc3NKGPW8d955Z9R7DQ0NxYEDB2LhwoWjzsvUPfbmm2+OdevWJa67u7vj8ccfT+m829/fH7t3744VK1Ykajt27EjZr6CgIO66666YP39+onb8+PH45S9/GV1dXUlzDx06FL29vVFcXBwR5963nTt3Js3J1AH4+PHjaesHDhxIWz9x4kRKbcmSJUnXTz31VMZA8/Lly+OGG26IqqqqGB4ejubm5ti8eXOcPHkyZe7OnTtj5cqVMW/evLR7Xeiqq66KNWvWJK57enri6NGjsXXr1hgYGEiZ/9JLL8W999475r633HJLRJzrHtzT0xMdHR1x4MCB6OvrSzv/V7/6VXz729+OoqKiMfcGAAAAAAAAAIAPSwdgAAAAAAA+crNnz4558+bFvHnzor6+PtasWRN/+7d/G1/60pfSzn/ttdfS1tva2lJCs+m65L755ptjnqm9vT2ltmHDhqTwb0REaWlp3HvvvVFbW5sy/8Jwbbr9IiLuvffepPBvRERNTU38wz/8Q9puwBd25l26dGnKeFtbW0rt6NGjKd2Iz+vo6IihoaGkWk9PT/T396fMXbx4cdKcXbt2pd3ztttuiy9+8YtRVVUVERG5ubkxf/78ePDBB2PWrFlp1zzzzDNp6xerrKyMmpqaxH8LFiyIDRs2xHe+851EMPpC6ULkF8vNzY1rr702rr322lizZk3ceOONcccdd8Q///M/x2c+85m0awYHB2PLli3jOjMAAAAAAAAAAHxYAsAAAAAAAGSNJUuWpO0K29ramnb+tm3bUmo33HBDFBQUJNUOHjwYw8PDo9774lBsRGQMr0acC73Onj076b+ZM2cmxtMFcyPOhX3TycvLi8985jMpe14Ycq2vr09ZNzw8HB0dHUm1hoaGjOeOOPd+XOjQoUMpc8rKypK63W7fvj3tXosXL45rrrkm473uvvvuKCwsTKm3t7dHd3f3qOccTX5+ftx8880p9ZGRkbRh5vFas2ZNbNiwIe3Ynj17/ux9AQAAAAAAAADgg8if7AMAAAAAAMCF5s2bF01NTUm1TEHR3bt3p9SWLVsWBw4ciL179yZqIyMj0dDQkLaD7nn5+fkxODiYVHvllVeivr4+8vNTf5xeV1cX9913X8b9ZsyYkba+ZcuWjF1mV69eHatXr864Z25ubkybNi2lu/DBgwcT3XcjIt57772Me0RE7N27NxYtWpS0/mILFixIut65c2fKnKKiorjzzjtHvVdRUVHcc8898dOf/jRlbPv27XH99dePun40mcLUZ8+eTRs6Hq8bb7wxWltbU4LUfX19cezYsVGD4QAAAAAAAAAAcCnoAAwAAAAAQFbJyckZ17xjx45Fb29vUq26ujoKCwtj5cqVKfPTdQu+UG1tbUqtpaUlvvvd78aLL76Y0mV3LJWVlZGXl5dSf+ONN+KHP/xhvPnmmynnH48rrrgipXZxB9+TJ08mXVdUVCRdXxz4PXz4cMqey5YtS7pO9/xz586N3Nyx/6lh1qxZaec1NzePuXY0mb4m5eXlH2rfiIi1a9emrV8cTgcAAAAAAAAAgImgAzAAAAAAAFmlsbExpVZaWppSe/PNN1Nqy5cvj4iIhQsXRk5OToyMjCTGmpubY3BwMG033/Nr0gVhe3t7Y+vWrbF169bIz8+P6dOnx7x582LVqlVJXXfTqa2tjSNHjqTU29raYvPmzbF58+YoLi6OmTNnxhVXXBFXX311FBcXj7rnsmXL4o033kiqHT16NOk5L/bZz342Hn300cR1V1dX9Pf3J7rkpgvS1tfXJ15f3Bn5vLq6ulHPeqGKioqU+3R1dY17fTovvPBCSi0vLy/j1/iDyPRsZ86c+dB7AwAAAAAAAADAWASAAQAAAADIGvv27UvbYXXGjBkptb1796bUPvGJT0RERG5ubtTV1aWEb3ft2hVXX3112nuvX78+9u3bF8eOHct4vsHBwWhpaYmWlpb4wx/+EGVlZfGJT3wi1q1bF0VFRSnz77zzznjooYeir68v4569vb3R1NQUTU1NsWXLlpg5c2asWrUqVq1alXZ+XV1dSri5q6srhoeHIzc3N+V9mTZtWtpA9L59+2LFihXR2tqaVD+/5sKOvZlCr7Nnz874XBerqalJCQB3d3ePuW5gYCCpU3Jvb28cO3YstmzZkvZcS5YsGfeZRpObmxslJSXR09OTVO/s7Lwk+wMAAAAAAAAAwGgEgAEAAAAA+Mi1tLQkutYODQ3FyZMno6GhIQ4dOpR2/vr165OuGxsbU7rSTpkyJcrLyxPXK1asSAkAb9++PWMAODc3N+67777YtGlTtLS0jOs5urq64tVXX43t27fHgw8+GGVlZUnj5eXl8Xd/93fxwx/+MPr7+8e154kTJ+LZZ5+NPXv2xD333BM5OTkpc2pra1OCys3NzTF//vw4cOBAUv3KK6+MiIhZs2YldQo+HwA+ePBgyv5XXHFFynOmM3PmzHE9U0REdXV1Sm0878nrr78er7/++rjvc9NNN4177lgqKipSAsAXhpEBAAAAAAAAAGCi5I49BQAAAAAALq39+/fHpk2bYtOmTfHII4/Eb3/724zh37lz58acOXOSatu2bUuZdz7oet6KFStS5rS0tIzajTc3Nzfuv//+uPXWW6O0tHQ8jxIRET09PfGDH/wgTp8+nTJWXl4e3/rWt2L16tWRl5c37j2bmpriJz/5SQwPD6eMXfysERGHDh2K4eHhaG9vT6ovX748IlI74zY2NibWXWzZsmVJ11OmTEl7xra2tlGeINnF54qIKCgoGPf6seTl5cXdd98dFRUVl2zPdF/PD/K5AAAAAAAAAACAP5cOwAAAAAAAZK0FCxbE3XffnVLfv39/Sq2npye2bt065p47duyINWvWZBzPycmJ1atXx+rVq+PMmTOxZ8+eaGxsjJaWluju7s64rr+/P37/+9/HX//1X6eMFRUVxa233hq33nprtLS0xN69e6OpqSlOnjw5ahfc48ePx/79+2Px4sVJ9WXLlsVLL72UVGtsbIz58+cn1fLy8qKmpiYizgWBt2zZkhjr6emJ7u7ulE7COTk5UVdXl1SbOnVq2vMdPnw4JZw92rNc7FKFaSsrK+PrX//6JQ3nDg8Pp3T/jYikLtMAAAAAAAAAADBRBIABAAAAAMhKCxcujL/5m79Jqe/bty9tV9y9e/fG3r17x9x3+/btowaALzR16tRYt25drFu3LiLOhXwbGhri1VdfTdvRtrm5ecw9a2tro7a2NnHd2dkZu3btiq1bt6btTpwuAFxVVRUFBQUxMDCQqJ04cSIaGhqS5s2dOzfxury8PEpKSpJCrbt3704JNV94tvMydeq9ODw8mkzdkceSl5cXJSUlERExMjISZ8+eTZkzf/78S96ZN11gOSJzGBoAAAAAAAAAAC4lAWAAAAAAACZFbm5u0nVeXl6UlpZGbW1trFu3LqUL7Xnbtm37UPdtb2+P7u7uPyswWlhYGFdddVVcddVV8cQTT8SuXbuSxk+fPh3Dw8Mpzzaa8vLyWL9+faxduzb+4z/+IyUo29TUlHbd3Llz48CBA4nrwcHB2LNnT9KcpUuXJl3X19fH7t27E9evvPJKyr5XXnll2vtNnTo1zpw5M66zXay1tTWGhoZS6pm+xhe67rrrYuPGjYnr733veynnePvtt+PGG2+MKVOmjOs843Hx1/a8+vr6S3YPAAAAAAAAAADIRAAYAAAAAICP3MaNG5NCneM1PDwcjY2NH/r+f/zjH5Puv3fv3njzzTeT5ixZsiSuvfbajHusXbs2bUh0cHAwCgsL46WXXkrpCHzTTTfFnDlz0u6Xm5sbV111VUoot7+/P+38xYsXJwWAIyKpu29EagB4+fLlSQHgi+dHRCxbtizt/VauXJlytp6ennj66afj85//fNo1Eefej0ceeSTt2KpVqzKuy+S2226Lxx57LKX+7LPPxpe//OUPvF86HR0dKZ+HiIji4uKYPn36JbkHAAAAAAAAAACMRgAYAAAAAICPjd27d8fIyEhKffHixRm77r777rsptR07diQFgE+fPp0S1j1y5Eh88pOfjPz89D9Kb2hoSKnl5OREYWFhREQcPnw4Zc/f/va38Y1vfCPtfhER7733Xkpt6tSpaecuXrw4nnnmmYx7lZWVRXFxcVJt4cKFGedHRBQUFERVVVXasVWrVqXtGPz2229HfX19Stj4vMceeyxt0LiysjLKy8tHPU86ixYtisrKyjh16lRSvaGhITo6OjKef7waGxvjF7/4Rdqx5cuXf6i9AQAAAAAAAABgvASAAQAAAAD42PjjH/+YUps1a9aonV8PHz4cDz/8cFLtzJkzcfr06aioqIiIiPnz56esGx4eju9///vx5S9/Oerq6pLGXn755bRh2MrKysTrefPmRVNTU9L4iRMn4uGHH44777wzysrKEvWBgYF4/PHHo6WlJWXP2bNnp32u0tLSKCkpSRuujYi44oorUmq5ubkxY8aMOHnyZNo1mboTR5wLFF9xxRVpQ8qPP/54rF+/PjZs2JAIQLe1tcWzzz6b8h6cd8stt2S811huu+22ePTRR1PqTz/9dNx7771jrh8eHk4Khnd3d0dHR0c0NDTE6dOn067Jz8+PT33qU3/2mQEAAAAAAAAA4IMQAAYAAAAA4GNhYGAgjh49mlK/6qqrRl03Z86cyMvLi6GhoaT6tm3b4tOf/nRERNTU1KTtKtvV1RWbNm2KvLy8KC8vj8HBwejq6sp4rxtuuCHx+tprr41XXnklpWPx4cOH47vf/W4UFhbGlClToqenJ3p7ezPuef3112ccW7BgQezZsyftWKZutUuWLMkYAF68eHHGe0VE3HHHHfFv//ZvMTAwkDL22muvxWuvvRY5OTkREWk7NV94n0WLFo16r9EsXLgwqqqqoqOjI6ne1NQUx48fj5qamjH3ePzxxz/QPb/0pS8lws0AAAAAAAAAADDRcif7AAAAAAAAMB47d+5MW1+xYsWYa9N1+H3nnXeSrr/4xS9mXD80NBSnTp0aNfxbU1OTFLotLi4etWNsf39/dHR0jBr+ve6666K0tDTj+NKlS9PWc3JyYt68eWnHRnu/lixZknEsIqKwsDC++tWvJkK+6YyMjIwa/q2oqIgvfOELo95nPD73uc+lrT/55JMfeu+Lffazn03bURkAAAAAAAAAACaKADAAAAAAAB8L27dvT6lVVlZGcXHxmGvTdQnu7u6O1tbWxHVdXV3cc889o4ZbM6mtrY2vf/3rKfV169bFxo0bP/B+Eec6CN90002jzskUSq2pqcn4HFVVVWk72ZaUlIwaNj5v3rx58c1vfnNc7/vFFi1aFH//938fBQUFH3jtxebPnx/V1dUp9RMnTkRjY+OH3j8ioqysLB544IFYtWrVJdkPAAAAAAAAAADGSwAYAAAAAIAJlZub+qPovLy8D7TH8PBwnDx5MqW+bNmyca3P1Nl2165dSdfz58+P73znO7Fs2bJxBYFLS0vj9ttvjwceeCDjM23cuDEefPDBqK2tHddZp0+fHvfff3/ccsstY87Nz8+PysrKlPpYnXzTdUResGDBuM4XcS5E/K1vfSs2btw4riBwbW1tfOUrX4m77ror7efhvA/6WcnUBXjLli3jWn+xgoKCqKioiCVLlsT9998f//RP/zTurxsAAAAAAAAAAFxKOWs2fGpksg8BAAAAAPCX4A+vbBl7ElljZGQkGhsbo6mpKbq6uqK/vz8iznWFPR8SnTp16gfac2BgIBoaGuLEiRPR1dUVg4ODkZeXF+Xl5VFdXR1Lly5N25032x09ejSOHTsWHR0d0d3dHSMjI1FVVRVVVVWxYMGCKC8vn+wjAgAAcImsvf7myT4CAAAAAMBfBAFgAAAAAICPiAAwAAAA8HEnAAwAAAAA8NHInewDAAAAAAAAAAAAAAAAAAAA7xMABgAAAAAAAAAAAAAAAACALCIADAAAAAAAAAAAAAAAAAAAWUQAGAAAAAAAAAAAAAAAAAAAsogAMAAAAAAAAAAAAAAAAAAAZBEBYAAAAAAAAAAAAAAAAAAAyCICwAAAAAAAAAAAAAAAAAAAkEUEgAEAAAAAAAAAAAAAAAAAIIsIAAMAAAAAAAAAAAAAAAAAQBYRAAYAAAAAAAAAAAAAAAAAgCwiAAwAAAAAAAAAAAAAAAAAAFlEABgAAAAAAAAAAAAAAAAAALKIADAAAAAAAAAAAAAAAAAAAGQRAWAAAAAAAAAAAAAAAAAAAMgiAsAAAAAAAAAAAAAAAAAAAJBFBIABAAAAAAAAAAAAAAAAACCLCAADAAAAAAAAAAAAAAAAAEAWEQAGAAAAAAAAAAAAAAAAAIAsIgAMAAAAAAAAAAAAAAAAAABZRAAYAAAAAAAAAAAAAAAAAACyiAAwAAAAAAAAAAAAAAAAAABkEQFgAAAAAAAAAAAAAAAAAADIIgLAAAAAAAAAAAAAAAAAAACQRQSAAQAAAAAAAAAAAAAAAAAgiwgAAwAAAAAAAAAAAAAAAABAFhEABgAAAAAAAAAAAAAAAACALJI/2QcAAAAAAOAvQ3dPb7R1nInevv7o7euLoaHhyT4SAAAAjCkvLzeKi4qipKgwplVNjdKS4sk+EgAAAAAAfwEEgAEAAAAAmFAjIyNx7ERbnGjtmOyjAAAAwAc2NDQcZ7t74mx3T7R2nI6a6VVRO7M6cnJyJvtoAAAAAABcxgSAAQAAAACYUPsONkd3T19ERFRVlEfl1LKYUloS+fl5k3wyAAAAGNvg4FCc7e6JU2e6ouN0Zxxv7YjOsz2xeOHcyT4aAAAAAACXMQFgAAAAAAAmTMuJtuju6Yv8/LxYMGdWlE0pmewjAQAAwAeSn58XFVPLomJqWUyrnBqNh1uiu6c3Wk60Re3M6sk+HgAAAAAAl6ncyT4AAAAAAACXp57evmg52R4REfVz64R/AQAA+NgrLyuNBXNrIyKi5WR79PT2TfKJAAAAAAC4XAkAAwAAAAAwIU62nYqIiOqqiphSWjzJpwEAAIBLo2xKaUyrnBoREW3tpyf5NAAAAAAAXK4EgAEAAAAAmBC9ff0REVE5tWySTwIAAACX1vnvdc9/7wsAAAAAAJeaADAAAAAAABOit68vIiJKdf8FAADgMlNSUhQRAsAAAAAAAEwcAWAAAAAAACbE8PBIRETk5fpRNAAAAJeXgvz8iIgYHBqa5JMAAAAAAHC58ltXAAAAAAAAAAAAAAAAAACQRQSAAQAAAAAAAAAAAAAAAAAgiwgAAwAAAAAAAAAAAAAAAABAFhEABgAAAAAAAAAAAAAAAACALCIADAAAAAAAAAAAAAAAAAAAWUQAGAAAAAAAAAAAAAAAAAAAsogAMAAAAAAAAAAAAAAAAAAAZBEBYAAAAAAAAAAAAAAAAAAAyCICwAAAAAAAAAAAAAAAAAAAkEUEgAEAAAAAAAAAAAAAAAAAIIsIAAMAAAAAAAAAAAAAAAAAQBYRAAYAAAAAAAAAAAAAAAAAgCwiAAwAAAAAAAAAAAAAAAAAAFlEABgAAAAAAAAAAAAAAAAAALKIADAAAAAAAAAAAAAAAAAAAGQRAWAAAAAAAAAAAAAAAAAAAMgiAsAAAAAAAAAAAAAAAAAAAJBF8if7AAAAAAAAAGS///ffH4qBgYGIiHjw6/dE9bTKST4RAAAAAAAAAMDlSwAYAAAAAIDLwpPPPh+79uz9wOuqKivjfz9wzwSc6OPv+z96JE6fPp24zsnJSZmTm5sbJSUlMWf2rNiw9pqYMb36ozwiH6H+/v7E68HBgUk8CQAAAAAAAADA5U8AGAAAAACAy0JPb2+MjIz8WesmypGjLfHK69siIqJyannc9pkbJ+xeE6H3ovcm3fs7NDQUXV1d8e7effHu3n3xmU9tjGtXfeKjOiIAAAAAAAAAAFyWBIABAAAAAPiLlpeXN2F7Hzt+Ig4eaoyIiIKCgo9dAPjP8bsXXo6RkZFYc83Vk30UAAAAAAAAAAD42BIABgAAAADgsjO7blb8r699abKPcVm58fr1cd3aa5Jq/QMD0draHm/t3B07d+1J1J9/8ZUoLSmJFcsWf9THBAAAAAAAAACAy0LuZB8AAAAAAAD4eCosKIi6WTXxV7fdHA/87d8kjb3w8muTdCoAAAAAAAAAAPj40wEYAAAAAAAu0N3dEydOtkZERFnZlJhePS0iIvr6+uO9g43R2HwkyqaURm3NjJgzuy5KiotS9mg+fDSGhoai5fjJRG1oaCgONTYnrquqKqNiannaM3R2nY0DBxujtb0j+vr6o6qyImpnTo/6BfMynnt4eDiamo9ERER+fn7MmT0rIiJ6entj3/6D0XzkWBQUFMQtn7o+cnMv/d8HrZk5Pa695up4849vR0REV1dXdJ3tjrIppSlze3p749ix43Hk2PHoOns2ZtXMjLlz6qJ6WtW47zcwOBhHjhyLxuaj0dPbG7NqZsTsutrE12ss3d090Xz4aDQdORq5Obkxp6426upqorysLGXuhV+3BfPnpt1vaGg4mg+fe//z8vJi7py6tPP6+wfi6LGWiIgoKiqKWbUz085rbWuPxuYj0dFxOvoHBqKyYmrMmD4tFi1cEDk5ORmfq639VHR2dkZExPTp1Yn3/+ix47F3/4Ho7u6JJVcujEULF6SsPXK0JZqPHIv2jlMxpbQ06mpnxvz5c6KwoCDj/QAAAAAAAAAAmBgCwAAAAAAAcIFtb+2MV19/MyIiqqunxdfv/kr8+JFH49Sp02nn33zDhlh77SeTaj/75eMp84aHh+MXv34icb1k8aK48/bbkuZ0d/fE/zz1XDQ1H057r8LCwvj0jRvi6pXLU8ZOtrYl7f//fOf/jh89/Gi0tbUnzbtp47ooKixMu/+HddWyJYkAcEREe3tHUgC4s+ts/PLxJ+PknwLW5+14Z0/i9cbr1sb166/NeI++/v549Ne/SYRoz3t757n/5+XlxR1/dVtcuag+7frWtvb42S//J3p6epLqb24/d+6ysrK4+ytfjOpplRFxLrB74fv6jfu+FjOmV6fsu3ffe/HE088lrr/1zQfShp93vLMnfvfiyxERUVxcHN/5h28kjTcfPhpPPbcl4+ctLy8vrvnkyvj0jRvSjj/x9OY4fuJERESsueaTUVszI37zzOYYGRlJzOnv708KAB852hL/89RzieDwhXJzc+PG69fFumtXpb0fAAAAAAAAAAAT49L/iX8AAAAAALhMjAyPxE9/9ljGMGZExJbfvxrPv/jqh75XW/up+P6PHs4Y/o04F9x8ZvMLsXnLy2Pu9+snnkkJ/060izv4dnadTbzef+BQ/H8PbUoJ/17s5a1/iCeffT7t2MnWtvjeDzelhH8vNDQ0FL9+4ul4dvOLKWO79jTEf276eUr490JdXV3x0E9/Frvf3RcREYWFBVFe/n6n5ob9B9Ou27N3f/L1n9ZfbP/BxsTrBfOSuwm/tWNX/OyXj4/6eRsaGoo3tr0VP3nksRgcHMo4LyKirb0jnnj6uaTw78XeO9gYD//i12nDvxHngusv/H5rPP/Sh/+MAwAAAAAAAAAwfjoAAwAAAABABu0dHYnXNTNnRv38uZGfnxcHG5vjyNFjibE3/vhWrFl9dZSXTYmIc11sh4eH41DTkTh67P15G9a939l2wbw5idfDw8Px8C9+HQMDA4lacXFxzJ83JyqmlsfBxuak4Oy2t3bE3Dl1seTKhRnP/t6BQxFxrmPs9OnVMaN6WvT190d+3sT908CF71dEJN6PiIinfrslKYg6fXp1zJ1dF9OqKqK9/VTs2LUnhobOBVrf2f1uLKqfH0sWX5G0338/9n+iv78/cb140RWx5MqFkZuTE/sONMa+9w4k3sO3du6K9WuviYqp58K7nV1n4zfPbE7ab801n4x5c+qis+ts7D9wKA42NiXO+OzvXozlS6+MiIhF9fNj+453IiLiwKGmtB2KGy8Kbr+770CsWX11yrwLw8vLlyxKvD5+ojWe/V1yaLmkpCTq58+LqeVTYv/Bpmhtbb1g/ol48tnn447bb025x3kHDr0fNp4yZUrMnlUTeXl5UT//XPC4p7cvfvU/TyWtyc/Pj3lzZkfNzOlxsOlwtLQcj4iIN7a9lfE+AAAAAAAAAABcegLAAAAAAABcdnp6euP4iZPjmjtjenXk5uaOOufer94Zc+fUJa6vX39tvLVzdzy7+YVEbfvb78SN169LjEdElJTsSASACwoK4oYNa9Puv+X3W6O3tzdxfdXypXH7Zz+duL75huviZGtb/PjhRxMB1Sef/d2oAeB0+0y03e8md8Gd9qeOwHv27k/qunvLzTfE6k+uTJr76Zs2xHd/8NPo6+uLiIiG9w4lBYBPtrYl7XHbp2+KVVevSFwvXbIoOrvWx/f/879ieHg4IiJ+/+of4q8/95mIiNjxzp6k+33z//pfUVU5NXG96uoVsW//wfj1E09HxLluyw37D8TiRQtj+dIrEwHgdJ+rjlOnk8LbERHHWlK7FHd2dSXNW1g/P/H6V//n6aS5n7/15vjEVcsS1zdtXB+9fX3xvR9ujKrrqwAAIABJREFUSuzxbsO+WLv66phVOzPlXufl5+fH/ffeFdOrp6WMPfPcC0mh7EUL6+Mrd3w+cX3j9eticHAovvfQplG7JgMAAAAAAAAAcOkJAAMAAAAAcNlp7+iInzzyy3HNveeuO2Le3NkZxz9/681J4d/zPrlyebz6+rbo7OyMiIiTre1/3mEj4u2duxOv62bNShvanTG9Or5yx1/FY48/GRERAwMDcaixORb8qZvrxa5ctPAjDf+2trXH62/+MXFdVlYWZVNKIyKielpl3Hj9+oiIqJhaFsuXLk5Zn5+fH9evuzaef+mViIhoOnwkaby9/VTS9coVS1P2KC+bEvfd/ZU42NgcERGzamYkxto63l8/ZcqUpPDveVcuqo8vfeFz0fane1VPOxeanTN7VuTk5MTIyEgMDQ1FW3tHVP8p3BwRsWtPQ+J1UVFR9PX1xcjISDQfPpr02dm3/1DidXX1tMjLOxc8b2vvSHyOIiKWL12SFP49r7ioKO796p3x05+9/9l+fdtbceftt6XMPe9/P3BvTC0vSzu2/8DBxOuysrL40hc+mzInPz8v7rv7K/HDnzySFBYGAAAAAAAAAGBijd7SAAAAAAAA/sItX3plxrG5s98Pd3acOv1n7d9y/GRSV9hbb96Yce4V9fOjuLg4cb1j17sZ517ziRUZxy6V4eHhONnaFs9t+X3856afJ419auP6xOuZM6bHdWuvievWXpM2/Htezczpiddnz55NGpt5wVhExAu/35p2j9qaGYl7XRiOrpmRvPf+9w6lWx6LFy1MrK/+/9m79+es6nNv/Nedc0JCDiSEACJyRqGcFCgnsa3VWt3W1na3bls7s1vnqfP81tkz+294Zp6Z3e93+tX97K+HWnTvetgtHrBqt7YeAWULWkUOIiCnEJKQcMiJJM8PlEVukkCAhNzg6zXDzPqsda3Putad2x84vL0qypLzNWPGJMdbt3+eds+WHutvfm1FcvzJp9vS6rZ/vuv0cyZfkxxv/PCTtLrbb+0/uD2muiqmT5uSrHf02PNMZWWl/YZ/d3+xN5mUHBHxd9/6Rr+TsMvLRsYNC+b2+xwAAAAAAAAAAAafCcAAAAAAAFxxUqlUlJb2nvDalxF/m1Lbl4KCgsjJ6f+P0ivKS5PjjhMnBt5gD/v216atOzo6Ys/e/QO6t7Gpud9rZ5tqfCHeeHttvPnOurRz/U2E/dqNS+O6mf0HfSNOfl5Hjx6P1tbWaGlpiZbWtti2o+9QbkREeVlpZGdnR2dnZ0REbNj4YXyyZVvMunZ6XDt9aozpMe23L1MmXR1/fvOdZP3sc2uiorw85syaGdOmToqyc3xfZk6bHPv2n/y57Ni5O766cH5EnAxBHzp06GSP5eUxY9rkeP6lVyPiZOC350zdvftO/1x7fj519aenRxcXF0cqlTprL+PGVMeWrdsj4uT3pbu7u897rh7f/3egtu5Q2rpmzOizPvOqcTWx/v0PzloDAAAAAAAAAMDgEQAGAAAAAOCKM7ZmTNz793dd9D5nCwdHROSeJRw8UE1HjqStn3z6DwO+99ix4/1e62+a68XoL/Db09dWLI0b5s/p89rnO3fH+x98FHv27Y/29vbzfv7dd94Wv/vP55N1S0tLvLdhY7y3YWOkUqmorh4dN8ybHTOmTen1/qMqyuOrCxfEu+s3JOcaGhvj9TffidfffCdycnLi6gnjY/H182L8uJpez54xfUr811/eioiIA7UHT7/Tri+S4+lTromsrKyoqqqMurpDcfTo0Whta4uC/Pw4eux48s65ubkxqqI8ue/Y8dM/x57n+zO2pjptffTYsSgp7j3pNy8vr989jhw5PWE5Nzf3rEH3vp4JAAAAAAAAAMDQEgAGAAAAAIBh1NLSesH3nrjAqcODKZVKRUFBQYwfVxNLFy2I6tF9T+J95bU344NNH13UsyZefVXc+/ffjVf//FbU9gjhRpwMJx84UBvPv1QbL778Wtx1+60xZfLEtJoVSxdF6ciSeHvdhjhyRvD6xIkT8dmOnfHZjp1RWFgY991zd5SOLEmuF48oisLCwmhpaYkTJ05E4+GmKC8rjY8/3ZbUnJrqO3PalKj724TdLVs/izmzr43tPaYbXzVubNqz29pOh6FLR/YO8p7pzOnWLS2tfQaAz6a1rS05LiwsPGd90QBqAAAAAAAAAAAYPALAAAAAAAAwjEYUpU8Zvmn5krPWn+jsjFQqFdlZWWkB1aG2Yuni+OrC+Rd076uvv9Ur/FtdPToqK8qjpLg4igoLoqioMOobGtMm9PZl3Ngx8dN77o6W1tbY9NHm+OzzXXGg9mBaGLqrqyuefW5NfPfvvhVTJ1+Tdv+c2dfGnNnXRn1DY2z6aHN8vvuLqK9vSJtu3NLSEv//b/49fnbfj9I+40kTJ8THm7dERMS27Z/Hwuvnxs6/TQDOzc2NylEVERFx7Yyp8cbbayMiYnMfAeBrZ0xN66mwoCAJJB+qP3zW94+IJFx8SvGIEee850w9v3fHjh07S+VJTc1HzlkDAAAAAAAAAMDgEQAGAAAAAIBhNLIkfXLrgnlfiezsrGHqZmhs2fZZcjyqoiJ+/KPvRn5eXq+6bds/H/CehQUFsfiGebH4hnkREVF3qD7eevf92Lr99LPefPe9XgHg032Ux9duPB223rFzd7z2xjtRX98QEScnAm/88OO4cdnipObaGVOTAPD2z3fFtTOnRUtLS0REXH3V+KSudGRJFBQURGtra+zZuy8iIvbs3Z9cnzolvafiEUVxsO7kcUNj4znffd+B9OnHRUXnP523pPh0aLizszNa29qiID+/3/q9+w6c9zMAAAAAAAAAALhwV9a/IAIAAAAAgAzVc8JsT+PHjUlb79t/ZQUtW1pb0ybM3vntm/sM/0ZEbN66/YKfU1U5Ku6645aYNPHq5NyhQ/UDvn/SxAnxs5/8MPJ69PbZzt1pNRMnnA75Hqg9GJu3bEvW150x1fdUH52dnbFr955oa2uLiIjS0tLIy81Nqx0/riY5bm1tjZbWtrP2unP3nuS4sPD8w78REVeNr0lb7/h8dz+VJ312jusAAAAAAAAAAAwuAWAAAAAAABgiqVQqOT5x4kSfNVWVoyK/x+TV37/wcrS3d/S757PPvRQPPrwqHnx4Vax7/4PBa3aI9PfeZ2ppbYvtO3b2e/2//vJ2PLLqqXhk1VPxl7fW9lt39VXjkuOeoesnn14dj6x6Kh5d9XRs2fpZX7dGRET16KrkuPNEZ9q1rKysqKqqjIiIjo6O2LDxr8m1KWdMGp4183Qg+KU//eV03aSr40xzZs1MWz/59B/67e+vn2xJpgpHRFw7fWq/tWdTVTkqcnsEkde88locO97SZ+3OXV/EJ59uuaDnAAAAAAAAAABwYQSAAQAAAABgiFSUlaat33r3vejq6upVt3DB3OS4paUlfvPkM9HS2ppW09beHs+ufim2f/Z5NDc3R3Nzc9RUjx6axgdRSXFx2lTdF/74Wq9Q8OGm5njo4d9GR0f/weesrKyoqzsUdXWHYu17/x0fbPq4V01T85FY2yMUXVRUlBy3tLZGXd2hOFhXF3948eWo62M68M5dX8QXe/Ym69GjK3vVzJg6+fTzmpoiImJURUXk5GSn1U28+qokAH6qLiLiuhnTeu1ZVFQY48eNTdaHDtXHcy/9KdrP+Dx27d4TL778X2nnFl4/Ny7U/Dmzk+POzs5Y9bv/jCNHj6XV7D9wMJ7+w4sX/AwAAAAAAAAAAC5MznA3AAAAAAAAg23vvv3xv/7lwQHVVlSUx89+8sMh6WN0j2myERFvr30v3ln3flRUlMfc2dfG9fO+EhERSxYtiE1/3RzNzc0REdHQ2Bj/z4OPRGFhYZSXlUVbW1s0NDamTbStHj06JvSYdpvJrrn6qtiy7eTU3YN1dfG//9//ExXl5VFeVhoHDtbFsWPHzrFDxOIb5sf6HuHeV177S7z57voYP64mSktKoq6+IXbt/iLtnpXLFifHyxbfEH944Y/J+pHf/i5GjhwZE8aPjZzs7NhfWxe1Bw/2e/8pM6dPjTffWZd2bvrUSb3qUqlUVFePjgMHapNzWVlZUTOm79D2XXfcEr/+P79JAuKbP90amz/dGqWlpZGXlxv19Q29wuMrli6OkSXFfe43ECuWLoyNH30cbW1tERFx+HBT/H//9psoLCyMkSUlUd/QkIS1U6lU2vcPAAAAAAAAAIChZQIwAAAAAABXpO7u7gH9On68Zch6GFFUGNOmTE47193dHfX1DbFn34G08z/9h7ujtDR9YnBLS0vs278/6hsa0sKXoyoq4sc//O6Q9T3YbvnGyig7YxpyQ2NjfPb5zrTw79dvXNbvHoUF+XH7rd9IpupGnPx8tm3fEe9/sKlX+PeWr98Ys6+bkaynT50U874yK62mubk5/vrJp7Hxo4/Twr+5ubnxkx99L0pHlvTqo7xsZNpE44iI62b2nuobEXHttClp63Fja/p9v6LCwvjxD78XOTnp/+/WpqamqKs71Cv8e8P8ufHVhfP73W8gsrKy4r57vh+5ublp51taWqL24MG0Sc133XHrRT0LAAAAAAAAAIDzIwAMAAAAAMAVITvrwv7IO+uM+3quz7zW697snrWpPmv+7rab4+s3LouRI0emnU9Fen1hQUHc/9MfxZJF1/cKmCY1hYXxrZtvip/d98PIzu6/754h2YvRc88L/XwjToZ3f37fj2LqlEmRnZ3d63pVVWX8409+GOPGVifn+nqH62ZOiwd+fl+Mranp82eTnZ0dVVWV8bP77om5X7mu1/Vvfn1F/MMP7ur1szglNzc3Jk+aGP/z/p9GzZjqPmsiIiZOGJ92T0V5WZ91M2dMTV9Pm9xn3SljqqviF//445h17Yx+v3tVVZXxg7tuj6/duKTP6z2/h2d+R/pSXjYy/sc/3hszpk3t83pZWVncd8/3Y+rka9J+Juf6bwMAAAAAAAAAgIuTumHJyu5zlwEAAAAAcLHWv/36cLdwSW38eFtERMy9ru9g4ZdRa1tbdHSciO7u7hhZUnzW2uYjR6OhoTE6Ok5EcfGIqKysiNwzpsNerpqPHI2DdYciPy8vRo+ujPx+As/n0tLaGvsPHIysVCpGj66MosLC87r/cFNzNDQ0Rk5OTtTUVGfU59vd3R2Nh5uiofFwRHfEiBFFUVFRdsGf1UCcONEZ9Q0NceTIscjLy43q6qohfR4AAFzuvqy/71249KbhbgEAAAAA4Eshc/4lCwAAAAAAXOEK8vOjID9/QLUjS4rPGRK+XA3WuxUWFMSkiRMu+P6y0pFRVtr3NODhlkqloqK8rN/pwkMhJyc7qkdXRfXoqkv2TAAAAAAAAAAA+pY13A0AAAAAAAAAAAAAAAAAAACnCQADAAAAAAAAAAAAAAAAAEAGEQAGAAAAAAAAAAAAAAAAAIAMIgAMAAAAAAAAAAAAAAAAAAAZRAAYAAAAAAAAAAAAAAAAAAAyiAAwAAAAAAAAAAAAAAAAAABkEAFgAAAAAAAAAAAAAAAAAADIIALAAAAAAAAAAAAAAAAAAACQQQSAAQAAAAAAAAAAAAAAAAAggwgAAwAAAAAAAAAAAAAAAABABhEABgAAAAAAAAAAAAAAAACADCIADAAAAAAAAAAAAAAAAAAAGUQAGAAAAAAAAAAAAAAAAAAAMogAMAAAAAAAAAAAAAAAAAAAZBABYAAAAAAAAAAAAAAAAAAAyCACwAAAAAAAAAAAAAAAAAAAkEEEgAEAAAAAGBI5OdkREXHiROcwdwIAAACDq+Nvv9c99XtfAAAAAAAYbALAAAAAAAAMiaKC/IiIaGltG+ZOAAAAYHC1tLRGxOnf+wIAAAAAwGATAAYAAAAAYEgU/u0fQR9qaBrmTgAAAGBw1TUcjoiIosKCYe4EAAAAAIArlQAwAAAAAABDYlRFWaRSEU1HjsbRY8eHux0AAAAYFM1HjsWRo8cjlUpFRXnpcLcDAAAAAMAVSgAYAAAAAIAhkZebEzWjKyMiYueeA0LAAAAAXPaOHD0eu/fWRkTE2OpRkZebM8wdAQAAAABwpfIn0AAAAAAADJnRleVxuPloHG9pje0790Z5aUmUl5ZEUVFB5GRnD3d7AAAAcE4dHSfieEtrHG4+Go1NRyIioqiwIKpGlQ9zZwAAAAAAXMkEgAEAAAAAGFJTrxkfBw7WR+2hxmhsOpL8Y2kAAAC4HFVXlseY0aOGuw0AAAAAAK5wAsAAAAAAAAypVCoVNdWVUTqyOOobm6O1rT1a29qis7NruFsDAACAc8rOzoqC/PwozM+LivKRUVRYMNwtAQAAAADwJSAADAAAAADAJVFUWOAfSQMAAAAAAAAAAAxA1nA3AAAAAAAAAAAAAAAAAAAAnCYADAAAAAAAAAAAAAAAAAAAGUQAGAAAAAAAAAAAAAAAAAAAMogAMAAAAAAAAAAAAAAAAAAAZBABYAAAAAAAAAAAAAAAAAAAyCACwAAAAAAAAAAAAAAAAAAAkEEEgAEAAAAAAAAAAAAAAAAAIIMIAAMAAAAAAAAAAAAAAAAAQAYRAAYAAAAAAAAAAAAAAAAAgAwiAAwAAAAAAAAAAAAAAAAAABlEABgAAAAAAAAAAAAAAAAAADKIADAAAAAAAAAAAAAAAAAAAGQQAWAAAAAAAAAAAAAAAAAAAMggAsAAAAAAAAAAAAAAAAAAAJBBBIABAAAAAAAAAAAAAAAAACCDCAADAAAAAAAAAAAAAAAAAEAGEQAGAAAAAAAAAAAAAAAAAIAMIgAMAAAAAAAAAAAAAAAAAAAZRAAYAAAAAAAAAAAAAAAAAAAyiAAwAAAAAAAAAAAAAAAAAABkEAFgAAAAAAAAAAAAAAAAAADIIALAAAAAAAAAAAAAAAAAAACQQQSAAQAAAAAAAAAAAAAAAAAggwgAAwAAAAAAAAAAAAAAAABABhEABgAAAAAAAAAAAAAAAACADCIADAAAAAAAAAAAAAAAAAAAGUQAGAAAAAAAAAAAAAAAAAAAMogAMAAAAAAAAAAAAAAAAAAAZBABYAAAAAAAAAAAAAAAAAAAyCACwAAAAAAAAAAAAAAAAAAAkEEEgAEAAAAAAAAAAAAAAAAAIIMIAAMAAAAAAAAAAAAAAAAAQAYRAAYAAAAAAAAAAAAAAAAAgAwiAAwAAAAAAAAAAAAAAAAAABlEABgAAAAAAAAAAAAAAAAAADKIADAAAAAAAAAAAAAAAAAAAGQQAWAAAAAAAAAAAAAAAAAAAMggAsAAAAAAAAAAAAAAAAAAAJBBBIABAAAAAAAAAAAAAAAAACCDCAADAAAAAAAAAAAAAAAAAEAGEQAGAAAAAAAAAAAAAAAAAIAMkjPcDQAAAAAAcGX7+OOP409/+lPU19dHW1vbRe1VUFAQFRUVccstt8SMGTMGqUMAAAAAAAAAAIDMYgIwAAAAAABD5s9//nM8/vjjsW/fvosO/0ZEtLa2xr59++LRRx+NN954YxA6BAAAAAAAAAAAyDwmAAMAAAAAMCS2bt0aL730UhQXF8dtt90W06ZNi5KSkova88iRI7F169ZYs2ZNvPjiizF27NiYMmXKIHVMJnrssceitrY2IiJuu+22mD179jB3BAAAAAAAAAAAQ08AGAAAAACAIfGXv/wlIiLuvPPO+MpXvjIoe5aUlMSCBQsiNzc3nnjiiXjjjTcGHADevHlzPPfcc+esy83NjREjRsT06dPj+uuvj+Li4ottm4tw7Nix6O7ujogYlCnSmaatrS3+5V/+Jbq7uyOVSkV5eXncf//9F7TXJ598Es8//3xERHR3d8fcuXPj1ltvHcx2AQAAAAAAAAC4RLKGuwEAAAAAAK5M+/fvj4iI6dOnD/rep0K/p54xEG1tbdHd3X3OX+3t7dHY2Bhr166NX//617F3795B7x9O6erqSgLO3d3d0dDQcF7f657efvvt5HscEdHa2jpofQIAAAAAAAAAcGkJAAMAAAAAMCSOHTsWERH5+fmDvndRUVFERDQ3Nw/63j11d3fHb3/729ixY8eQPgd6evPNN8/7nsbGxqivrx+CbgAAAAAAAAAAGA45w90AAAAAAABcatnZ2fFP//RPvc63t7fHwYMH44033ojdu3cn55966ql44IEHYuTIkZeyTb6kduzYEe3t7ZGXlzfge956660h7AgAAAAAAAAAgEvNBGAAAAAAAPibvLy8GD9+fNxzzz2xYsWKtGvvvPPOMHXFl9H69esHXNvZ2RmffPLJEHYDAAAAAAAAAMClZgIwAAAAAAD0YcmSJbFhw4Y4duxYRETaROC+HDlyJD777LOor6+Ptra2KCsrizFjxsSkSZP6vaerqyt27doVERG5ubkxfvz4iDg5iXjbtm2xa9euKC8vjwkTJsS4ceN63b9v377Ys2dPHDp0KEaNGhWTJk2KqqqqAb9jbW1tfPHFF3Ho0KGIiBg1alRMmDAhqqurM7bnU/bv3x979uyJurq6KCoqiqqqqpg+fXrk5Az8rz4u5P2PHz8etbW1ERFRUlISlZWVERHR2NgYW7ZsiUOHDkVVVVUsWrTovN+pp/fffz+WLVs2oNqNGzdGd3f3BT1nx44dceDAgTh8+HDk5+fHqFGjYvLkyVFSUnJB+wEAAAAAAAAAMDgEgAEAAAAAoB/jxo2LrVu3RkQkQeAzHT9+PFavXp2EYs+Un58fN910U8ydO7fXtYMHD8bvfve7ZP3P//zP8cQTT8QXX3zRq3bMmDFx9913R3FxcdTV1cXvf//7aGhoSKt5/fXXIzs7O+69996oqanp97327dsXzz//fDQ2NvZ5vby8PO64444YO3ZsxvR8Sm1tbaxevbrXPhERL7zwQixatChWrlx51j0u5v03bNgQb7/9dkREVFZWxve+97149NFHo729PakpLCy86ABwa2tr7Ny5MyZOnHjO2nXr1iXHqVRqQGHgjRs3xuuvvx5tbW19Xp8wYUJ85zvfiaKiooE3DQAAAAAAAADAoMka7gYAAAAAACBTZWdnJ8epVKrX9fr6+njooYf6Df9GRLS1tcUf//jHePXVV8/5vDVr1vQZpI2IOHDgQDz++OPR1NQUjzzySJ8B2IiIzs7OePzxx5MptWfavHlzPP744/2GXyNOTrN9/PHHY8uWLRnRc8++HnvssX736e7ujrVr18ZTTz3V7x6D+f6dnZ3x29/+Ni38e7GmTZuWHL/11lvnrN+/f380Nzcn6+nTp5/znpdffjn++Mc/9hv+jTg58fqhhx466+cEAAAAAAAAAMDQEQAGAAAAAIB+HDx4MDkuKSlJu9bV1dUr/FlQUBAzZsyIRYsWxejRo9PqN2zYcM5A6YcffhgRJyfnLlu2LGbNmhV5eXnJ9ebm5njooYeSCa9jx46NZcuWxbx586K4uDip6+7ujpdffrnX/o2NjbF69eq0c6WlpTFv3ryYO3dulJaWpl37/e9/H0ePHh3WnnvasGFDsk9xcXHMmTMnFixYECNHjkyr27FjR9pU3KF6/8bGxjh+/HhEnJz0PHHixJg1a1bMmjXrrO9xNsuXL0+O9+zZk+zfn1PTiCMirrrqqigsLDxr/caNG+ODDz5IOzd69OhYvHhxTJ8+PQoKCpLz7e3t8eSTT55P+wAAAAAAAAAADJKc4W4AAAAAAAAy0Y4dO6K+vj5Zjxs3Lu3666+/Hq2trcl69uzZ8e1vfztZ33TTTVFXVxePPPJIElp94YUXzjmh9c4774yZM2cm65aWlvi3f/u3JAh6aq/vfe97MXXq1KTu5ptvjocffjjpua6urtfezzzzTNr6O9/5TsyYMSPt3AcffJAWxH3uuefinnvuGbae+/L9738/Jk+enLbPnj17YtWqVcm5P//5zzFv3ry0MPJQvf/tt99+UaHfnqqqqqK8vDyZvPvuu+/G17/+9T5r29vbY/v27cl6+fLlsXnz5n73bmtri1deeSVZZ2Vlxc9//vMoLy9Pq3vmmWeSfY8cORLr16+PhQsXXvA7AQAAAAAAAABw/kwABgAAAACAHjo7O+Odd96Jp59+Ou38ihUr0tabNm1KjseNG5cW/j2lqqoq7r777mTd0dERn3/+eb/Pnjt3blqQNiKisLAwli1blnZuwYIFaUHaiJNhzptvvjntWT0Dyk1NTWmB5uXLl/cKv0ZEzJs3L+bPn5+sd+/eHSdOnBiWnvuyePHitPDvKePHj4+VK1cm6+7u7rQw7FC9/2233TZo4d9TFi9enBxv3Lix37r3338/OS4qKooJEyacdd+PPvoourq6kvU999zTK/wbcTKoXVFRkazPnBgMAAAAAAAAAMDQMwEYAAAAAIAvnc7OzvjVr37V63xHR0efYc+FCxdGUVFRst6/f3+0t7cn62984xv9Pmvy5MlRUFCQBFs/+uijuOaaa/qs7S9Iembgtb8pwmPHjk1bHz58OMaMGRMR6UHSVCoVS5cu7bfnFStWxH//938n623btvUK+V6Kns+Ul5eXFvI90+LFi2PdunXR0tISEREff/xxzJkzJyIu/ftfjNmzZ8crr7wSnZ2d0dHREZ9++mmfYeX33nsvOR7IhN6PPvooOa6uro7x48f3WZdKpWLx4sWxZs2aiIhobGyM9vb2tGnKAAAAAAAAAAAMLQFgAAAAAAC+lE6FRM8mlUrFypUrY9GiRWnn9+3bl7bu6OiIPXv2DOi5jY2N/V4bN25cn+fPDF7W1NQMqK6n2tratPVA+42ItMm5ZxrKns80atSoc9ZUVVXF7t27IyKioaEhOT8U719WVhZZWVkD3megsrKyYtasWcmU6XfeeadXAHjXrl1p3+EFCxacc9+e371UKnVen0FjY2NUV1cPuB4AAAAAAAAAgIsjAAwAAAAAAH0YMWJE3H///ZGfn9/rWnNzc9r6ySefHPC+x44d6/daKpUa0B4DrevpyJEjyXF3d3esWrVqwPeW1NWkAAAgAElEQVSe+b4X0suF9Hym/iYDn1lzKgDc1taWnB+K98/JGbq/Zlm6dGkSAD548GA0NTVFaWlpcv2tt95KjqdPnx65ubnn3LPn1OoDBw6c92cgAAwAAAAAAAAAcOkIAAMAAAAA8KWTlZUVDzzwQK/zq1atisOHD0fEyaBuR0dHnwHggUwP7s+JEycu+N6L0TMMe756BkeHU1lZ2TlreoZkOzs7k+PL7f1HjhwZY8aMiQMHDkRExNtvvx233XZbREQcP348vvjii6R2+fLlQ95PpnwHAAAAAAAAAAC+LASAAQAAAAD40kmlUlFcXNzr/Le//e144oknkvWaNWviBz/4Qa+6ESNGpK1vuummsz7vVBA1Ozs7LaB6KRUUFCSTbFOpVKxcufKs9e3t7ZGXlxcREVddddWQ9zcQBw8ePGdNXV1dctxzKu7l+P5Lly6NZ599NiIi/vrXv8att94aWVlZsXbt2qSmvLw8KisrB7RfKpWK7u7uiDg5KXnmzJlnre/5GUyYMOFCXgEAAAAAAAAAgAskAAwAAAAAAH9z1VVXRU1NTezfvz8iInbs2BG1tbVRXV2dVldSUpK2vv766yM7O/uS9XkhiouLkwBtSUlJLFq0aJg7On8DCQDX1tYmxwUFBcnx5fj+U6dOjfz8/Ghra4uurq748MMPY+7cufHBBx8kNV/96lcHvF9eXl4yCXn06NGXxWcAAAAAAAAAAPBllTXcDQAAAAAAQCa5/fbb09bPP/98r5ozJ8Lu3bt3SHsaDOPGjUuOm5ubk0mwl5P6+vo4ceJEv9e7urrSJgD3DG5fru8/f/785HjdunWxZcuW6OjoiIiTE6Vnz5494L1GjRqVHO/Zs2fwmgQAAAAAAAAAYNAJAAMAAAAAMCRGjBgRERHHjx8f9L1P7VlcXDzoe48aNSqmTJmSrA8dOhTbtm1Lq6mqqkqbLvuHP/wh2tvb+93z2WefjQcffDAefPDBWLt27aD3PBBz5sxJWz/99NP91ra2tsbDDz+c9JwpYdGurq545pln+r2+evXqtIBwz3Ds5fr+Paf0NjY2xssvv5ysZ8+eHalUasB79fwMGhoaYsOGDf3W7tmzJ3n/f/3Xf42urq7z7BwAAAAAAAAAgIshAAwAAAAAwJAYO3ZsRERs37590Pc+teepZwy2W2+9NW29Zs2aXjULFy5Mjo8fPx6PPfZYtLS0pNW0tbXFM888E9u2bYumpqZoamqKmpqaIen5XIqLi9Om4O7YsSNeeumlXhN1Gxoa4tFHH426urpoamqK5ubmGD169KVut187d+6M1157La3vrq6uePfdd2PLli3Jufz8/LQg9+X6/gUFBTFx4sRk3TNQv3Tp0vPa67rrroucnJxk/eqrr8bHH3/cq+6zzz6Lf//3f0++s6lUKrKy/JUSAAAAAAAAAMCllHPuEgAAAAAAOH8rVqyIbdu2xerVq6OzszOmTp160RN7m5ubY9u2bUkg98YbbxyMVnspLi6OuXPnxsaNGyMioqWlJdatW5c2jXXJkiWxadOmaGpqioiTwdFf/epXUVhYGBUVFdHa2hoNDQ3R3d2d3DNmzJi4+uqrh6Tngbjrrrvi17/+ddLTpk2bYtOmTVFWVhYjRoyIY8eOxeHDh9PuWbJkSeTl5Q1Hu72kUqno7u6O9evXx/r166OioiIiTn72Z7rjjjt6Tce9XN9/xYoVsXPnzrRzNTU1UVJScl775OTkxJ133hnPPvtscu7555+PF154ISoqKqKgoCAaGxt7Te0+MxAPAAAAAAAAAMDQEwAGAAAAAGBITJs2LW6//fZ48cUX4z/+4z8Gde9UKhV33HFH2oTXwfa1r30tPvzww+jq6oqIiDfeeCPmz58fubm5Sc1Pf/rT+M1vfpMWGm1paYm9e/f22m/UqFHx4x//eMj6HYji4uL4yU9+EqtWrYrOzs7k/OHDh3sFXyMi5s2bF8uXL7+ULZ7VihUr4r333ksCqn0FfyMiVq5c2ed343J9/7Fjx0ZxcXEcPXo0Obds2bIL2mvq1KnxzW9+M1555ZXkXHd3d9TX1/dZf9ddd8WECRMu6FkAAAAAAAAAAFy4rOFuAAAAAACAK9fy5cvjl7/8ZSxcuDBKS0sver/y8vJYuHBh/PKXvzzvAGR2dnZyfOZk2L7k5eXFkiVLknVnZ2esXbs2raawsDDuv//+WLp0aeTn5/e5T2FhYXzrW9+Kn//852k9nE9PA+m3r9oznxdxcnLsL37xi7j22mv73beqqiruvffeuOWWW3pdu9Q9Z2Wd/quM/Pz8+MUvfhFz5szpc5/y8vL4wQ9+EIsXL+73WRf7/j3v6dnbheq539k+s57TpwsKCmLy5Ml91vXsqb/+5s+fH/fdd1+MHz++3+dNnTo1HnjggZg+fXq/NQAAAAAAAAAADJ3UDUtWdg93EwAAAAAAXwbr3359uFtgiDU3N0d9fX10dHRESUlJVFZWpk0MzjRdXV3R2NgYDQ0NkZWVFaWlpVFRUTEowdahdmpqbWNjY+Tm5kZVVVWMGDHivPa4nN9/sHR0dERDQ0McOXIkUqlUVFZWDkpYHwAAuHItXHrTcLcAAAAAAPClIAAMAAAAAHCJCAADAAAAlzsBYAAAAACAS+PL87+wBwAAAAAAAAAAAAAAAACAy4AAMAAAAAAAAAAAAAAAAAAAZBABYAAAAAAAAAAAAAAAAAAAyCACwAAAAAAAAAAAAAAAAAAAkEEEgAEAAAAAAAAAAAAAAAAAIIMIAAMAAAAAAAAAAAAAAAAAQAYRAAYAAAAAAAAAAAAAAAAAgAwiAAwAAAAAAAAAAAAAAAAAABlEABgAAAAAAAAAAAAAAAAAADKIADAAAAAAAAAAAAAAAAAAAGQQAWAAAAAAAAAAAAAAAAAAAMggAsAAAAAAAAAAAAAAAAAAAJBBBIABAAAAAAAAAAAAAAAAACCDCAADAAAAAAAAAAAAAAAAAEAGEQAGAAAAAAAAAAAAAAAAAIAMIgAMAAAAAAAAAAAAAAAAAAAZRAAYAAAAAAAAAAAAAAAAAAAyiAAwAAAAAAAAAAAAAAAAAABkEAFgAAAAAAAAAAAAAAAAAADIIALAAAAAAAAAAAAAAAAAAACQQQSAAQAAAAAAAAAAAAAAAAAggwgAAwAAAAAAAAAAAAAAAABABhEABgAAAAAAAAAAAAAAAACADCIADAAAAAAAAAAAAAAAAAAAGUQAGAAAAAAAAAAAAAAAAAAAMogAMAAAAAAAAAAAAAAAAAAAZJCc4W4AAAAAAIAr091PfHe4WwAAAIAh98w//OdwtwAAAAAAwBXIBGAAAAAAAAAAAAAAAAAAAMggAsAAAAAAAAAAAAAAAAAAAJBBBIABAAAAAAAAAAAAAAAAACCDCAADAAAAAAAAAAAAAAAAAEAGEQAGAAAAAAAAAAAAAAAAAIAMIgAMAAAAAAAAAAAAAAAAAAAZRAAYAAAAAAAAAAAAAAAAAAAyiAAwAAAAAAAAAAAAAAAAAABkEAFgAAAAAAAAAAAAAAAAAADIIALAAAAAAAAAAAAAAAAAAACQQQSAAQAAAAAAAAAAAAAAAAAggwgAAwAAAAAAAAAAAAAAAABABhEABgAAAAAAAAAAAAAAAACADCIADAAAAAAAAAAAAAAAAAAAGUQAGAAAAAAAAAAAAAAAAAAAMogAMAAAAAAAAAAAAAAAAAAAZBABYAAAAAAAAAAAAAAAAAAAyCACwAAAAAAAAAAAAAAAAAAAkEEEgAEAAAAAAAAAAAAAAAAAIIMIAAMAAAAAAAAAAAAAAAAAQAYRAAYAAAAAAAAAAAAAAAAAgAwiAAwAAAAAAAAAAAAAAAAAABlEABgAAAAAAAAAAAAAAAAAADKIADAAAAAAAAAAAAAAAAAAAGQQAWAAAAAAAAAAAAAAAAAAAMggAsAAAAAAAAAAAAAAAAAAAJBBBIABAAAAAAAAAAAAAAAAACCDCAADAAAAAAAAAAAAAAAAAEAGEQAGAAAAAAAAAAAAAAAAAIAMIgAMAAAAAAAAAAAAAAAAAAAZRAAYAAAAAAAAAAAAAAAAAAAyiAAwAAAAAAAAAAAAAAAAAABkEAFgAAAAAAAAAAAAAAAAAADIIALAAAAAAAAAAAAAAAAAAACQQQSAAQAAAAAAAAAAAAAAAAAggwgAAwAAAAAAAAAAAPB/2bvz8KjK++/jn1mybyQhgRDWEGSTRRBBFBSkCLWuVWstdcG2KtrFrdVa19ZW6691F7e6FS2uPIqKiiKlFNll38JiICEhkIQkk2WSmXOePwInmcxMMgkJGer7dV1e17nPubczM2f4I37mCwAAAAAAgDBCABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAIIwSAAQAAAAAAAAAAAAAAAAAAAAAAAAAAgDBCABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAII87O3gAAAAAAAAAAAAAAhKNIZ5QGdx+uUzJOUUpssrYc3Ka1eatVVJ7f7LjoiDjZ7XYZhqGausoW14mJjNeYPuPUJ6mPuid0U2HFAa0rWKctBRvkNepaHH90PdM0VV3rCunenI5IRTqjJElV7oqQxjRdL9D9RTqj5HREHpnXJclscT6bza6YyDhJkruuJqR7BgAAAAAAAAAAAID/dQSAAQAAAAAAAAAAAKCR9MRMPTT1T0qOSvI5P77nWOmUq+U1vXp78zy9t/7NgONfu+xVOWwOeU2vfvTmZUHXSY5L002n36wR3U6WTTafaxcOPE+SVFlXrceWPaF1eSuDznN0PUl6eOnftDr3vy3e431THtTgridJku7+8n5tL9zQ4pim6wW6v79O/z/1TMyUJC3OXaqnl/69xfnOP/kSXTX8SknSZ7u+1IvLnwl5LwAAAAAAAAAAAADwv8re2RsAAAAAAAAAAAAAgHAxpu8EPf2DJ/zCv405bA79+ORL9eC5f5HDHtGmdU7qdrJmX/CMRnYb5hf+bSwuIkZ/OOtOzRx7Q0jz3j7+V4qJjG+xn81mC3jcns7uc6aGZJzS8l4a3X/H7AQAAAAAAAAAAAAATjxUAAYAAAAAAAAAAAAASb1Ts/W7M26x2h6jTp/u/FKbDm5WaWWJhnQbqsn9JqpXYk9J0pCuA/XLM2/R40v+2qp1+qQO0ENTHvAJvm49tEMLd3+h3JJcJUYnaVDaIH1/wFQlHAnzfj97qnol9tQDC//Q7NxOe4TuO+d+3bng9lbtqaP8/qzfaua716jW4+7srQAAAAAAAAAAAADACYUAMAAAAAAAAAAAAABI+vmpP7OOS2pK9ev5v1Z1rcs6t+vgVs3f9K5+OOJK/fjkSyVJYzNHt3IVm+6ddLcV/vUYdbrjs99rX8kun14b81frnXVzdO1pv9B5A6ZJkoalD1F6YqaKyvObXSE7JUtTB1+gz7d+2Mq9tb9oR5TumnRPi8FlAAAAAAAAAAAAAIAve2dvAAAAAAAAAAAAAADCQc/EHtbxnA1zfcK/jb23/k2VH7kWYY/QKb3GhbzGRcMvU1JUoiTJlKlff3KbX/i3sVdWvqCV+9dY7etPuz6kdX52ylVKjksLeV8daVj6EJ2ZPbmztwEAAAAAAAAAAAAAJxQCwAAAAAAAAAAAAAAgyWmPsI73luY22/feL+/Tkytn68mVs5VzcFvIa3wvqyEIu2jPEh0oy2txzDPLnpIpU5I0vNtQRTpjAvbzGHU6UFkkSbLb7Hpo6kMh76sjbCjabB3fPOYGxUd36cTdAAAAAAAAAAAAAMCJhQAwAAAAAAAAAAAAAEjaV94Qxr36lKua7ZtXskdLchZqSc5CuWoOhzR/TGS8usWlW+33Nr0b0rhKd7lu/ujXuuPzu/Tbz+5Srac6aN+7F94jwzQkSemxXfXTU68LaY2O8OKql1Ry5LVx2p364/ce7LS9AAAAAAAAAAAAAMCJhgAwAAAAAAAAAAAAAEhas3+tdTwsfYgeP/8pjeg5pt3mz04bZB0bpqGi8vyQxx4oy9Oeg9u159COZvsdrjyol9a+ZrUvGPh99U7Nbv1m24FpGrrni3ut6sW9Envq4uE/6pS9AAAAAAAAAAAAAMCJhgAwAAAAAAAAAAAAAEiat+Ft5TUK5fZMzNQ9Z92luT9+Sw9P/z/9ZPS1ykzu1+b5MxIyrOPD7vJj2mtzPt82XzuKd0mSbLLpwXPuk93m6LD1mnOgLE9vbnzbal857HKlJ2Z2yl4AAAAAAAAAAAAA4ETi7OwNAAAAAAAAAAAAAEA4MEyvbv3oN3p4+qPKSu5rnXfaI5SdkqXslCxdPOh8lde6tGjPv/XehrdUXesKef70+HTrOC9I9V+HPUKXDP+RbDZb0Hk+2/6JyqqKm13rwS/v1yuXvqwIe4TiI+L0m4m36+//fiTkvbaneRve0oTeZ6h3Uk/ZZNOfvvdH/eK966QjlYEBAAAAAAAAAAAAAP4IAAMAAAAAAAAAAADAEYbp1W8/uVXpiZm6YsQVGpc5RpGOSJ8+iZHxumjgeTq3/xT98qNf6XDlwZDmdnvc1rHH8ATskxSboh8NvaTZeb49/K1W7vlPs31q6ir1yH/+pj+cdackaXzPsfqy5xitz1sV0l7b271f3KuXLn5BTrtTKdFd9Itxs/TC8mc6ZS8AAAAAAAAAAAAAcCKwd/YGAAAAAAAAAAAAACDcFJXn68n//E1Xzr1Cs+b/Uq+un6MdxbvkNb1WnxhnlJ49/ynFRiWENOeukl3WcXpsWpv3ZreF9mfedXkr9XXeSqt954TbFRUR0+Z1j4Wr5rCeXDnbak/tf46y04d2yl4AAAAAAAAAAAAA4ERAABgAAAAAAAAAAAAAmlFUnq+PNr2v3396h378ryu06Nsl1rVIR6TOzDo7pHlyDm6zjpNjkgP2KXEd0K8/uU2/WeD734GqhirD1bVVIe/9sSWPylVXKUmKsEfoD5PvC3lse1u26yutO7DRat836W457BGdth8AAAAAAAAAAAAACGcEgAEAAAAAAAAAAAAgRIbp1bP/fVzrDmywzp2WOTqksRXVpTJMQ5IUFxGj5LjAVYDzS/cor8T3v9ToLtb17Qe2tGq/9335oEyZkqTBXU/S5IHTQx7f3h7+6iFVe9ySpBhntH436fedthcAAAAAAAAAAAAACGcEgAEAAAAAAAAAAAB85/VJHaDbz75Lt599l87Mntxi/6V7v7aO0+PSQ16npKbUOv7V+F+HNKZ7Ui85j1TK9Rh1qjlS0TdUucU5+nD7J1b7+tEzlRAZ16o52ovHW6s//fsvVntU9xEanXFKp+wFAAAAAAAAAAAAAMIZAWAAAAAAAAAAAAAA33mmTI3LHKNxmWM069RftNh/bOYY67i4qiTkdZ5aPts6HpY+RD1T+jXb32az67Yzb7Xaha6ikNdq7J+r/6GiqkOSJIfNocyEHm2apz1sL9ygL/YsttpD0gZ12l4AAAAAAAAAAAAAIFwRAAYAAAAAAAAAAADwnbe3eKfK3OWSpEhHpO6Y9Hs5jlTdbeq0fhM0OmOk1V61f03I62zev1a5Zfus9t+nPRq04rDDHqHHfvCE+nXpY517bNmTIa/V1N2f3y3DNNo8vj09t+wplbrLOnsbAAAAAAAAAAAAABC2nJ29AQAAAAAAAAAAAAAIB5/kfKYfn3yZJGlsj1P12uWva9m+FdpZvEsHKw9qQNcBGtl9uE5K6W+Nqfa4tWDLB61a59H//J+ePO8x2W122W12/Wbszbpk0EXafHCrNhZtUq/EnhrZfYT6J/dVpCPSGrdw91fKLc5p8/2VVh7US9+8pl+MurbNc7QfU/csvFdP/eBx2WTr7M0AAAAAAAAAAAAAQNghAAwAAAAAAAAAAAAAkt5b/y/FRMTqooHnSZKiHVGa3HeiJvedGLD/oepi3fbxbTJbWVW3sGyfbv7o13r43D8rMTJBktQ7qad6J/XU9OzvBRyzuuAbPf/1061aJ5DPt87XpL5naUBK1jHPdawKy/bpzY3v6CfDLu/srQAAAAAAAAAAAABA2LF39gYAAAAAAAAAAAAAIFzMWf0P3ffVH+Wqqwzax2N4tHL/Gt0473pVusuD9jNNM+i1ovJ8XffutVqev1IewxO0X5m7XHcuvEcPL/qjpODzqcWrDR744j7VGXVW2zC8IY5ssl6A+zManTNCCEbP2zBXeeX5VtvbyjA1AAAAAAAAAAAAAPyvso0Zf3aofwcGAAAAAAAAAByDlf/9qrO3cFxd+sYlnb0FAACOicMeoez0wRrefbjiI2O1s2SX1ud/o/LqknZfKzEmRSN7jlb/5P5y1bq0pWiLcoq2qtZT3e5rAQCA9vXuT97v7C0cV6edMamztwAAAAAAAAAA3wnOzt4AAAAAAAAAAAAAAIQjr1Gn7YUbtL1wQ4evVV5doiU5C7VECzt8LQAAAAAAAAAAAABA+LN39gYAAAAAAAAAAAAAAAAAAAAAAAAAAAAANCAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGCEADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGCEADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGCEADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGCEADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGCEADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGCEADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGCEADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGCEADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGCEADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGCEADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGCEADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGCEADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGCEADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGCEADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGCEADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGCEADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGCEADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGCEADAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQRAsAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGHF29gYAAAAAAAAAAP+b3v3J+529BQAAAAAAAAAAAAAAAAA4IVEBGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgjBIABAAAAAAAAAAAAAAAAAAAAAAAAAACAMEIAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgjBIABAAAAAAAAAAAAAAAAAAAAAAAAAACAMEIAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgjBIABAAAAAAAAAAAAAAAAAAAAAAAAAACAMEIAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgjBIABAAAAAAAAAAAAAAAAAAAAAAAAAACAMEIAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgjBIABAAAAAAAAAAAAAAAAAAAAAAAAAACAMEIAGAAAAAAAAAAAAACAJrwlpTLKyjt7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AAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAIAQATAAAAAAAAAAAAAAAAAAAIQIgAEAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAAAIQJgAAAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAAAAEIEwAAAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAACAEAEwAAAAAAAAAAAAAAAAAACECIABAAAAAAAAAAAAAAAAACBEAAwAAAAAAAAAAAAAAAAAACECYAAAAAAAAAAAAAAAAAAACBEAAwAAAAAAAAAAAAAAAABAiAAYAAAAAAAAAAAAAAAAAABCBMAAAAAAAAAAAAAAAAAAABAiAAYAAAAAAAAAAAAAAAAAgBABMAAAAAAAAAAAAAAAAAAAhAiAAQAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAAAhAmAAAAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAAAQgTAAAAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAIAQATAAAAAAAAAAAAAAAAAAAIQIgAEAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAAAIQJgAAAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAAAAEIEwAAAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAACAEAEwAAAAAAAAAAAAAAAAAACECIABAAAAAAAAAAAAAAAAACBEAAwAAAAAAAAAAAAAAAAAACECYAAAAAAAAAAAAAAAAAAACBEAAwAAAAAAAAAAAAAAAABAiAAYAAAAAAAAAAAAAAAAAABCBMAAAAAAAAAAAAAAAAAAABAiAAYAAAAAAAAAAAAAAAAAgBABMAAAAAAAAAAAAAAAAAAAhAiAAQAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAAAhAmAAAAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAAAQgTAAAAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAIAQATAAAAAAAAAAAAAAAAAAAIQIgAEAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAAAIQJgAAAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAAAAEIEwAAAAAAAAAAAAAAAAAAAECIABgAAAACYkLW19WlPAAAAALhn7jYAAAAAACZHAAwAAAAAMCGXV1amPQEAAADgnrnbAAAAAACYHAEwAAAAAMCEfPrZ59OeAAAAAHDP3G0AAAAAAEzO3N59+09NewQAAAAAwP1g5cqVce78hfHInj1jaWn3WJifn/YkAAAAgH91dW1tnDt3Ybz3/ofj7LffTXsOAAAAAMB9Y+b5F17amPYIAAAAAAAAAAAAAAAAAADgN7PTHgAAAAAAAAAAAAAAAAAAANwhAAYAAAAAAAAAAAAAAAAAgBABMAAAAAAAAAAAAAAAAAAAhAiAAQAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAAAhAmAAAAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAAAQgTAAAAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAIAQATAAAAAAAAAAAAAAAAAAAIQIgAEAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAAAIQJgAAAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAAAAEIEwAAAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAACAEAEwAAAAAAAAAAAAAAAAAACECIABAAAAAAAAAAAAAAAAACBEAAwAAAAAAAAAAAAAAAAAACECYAAAAAAAAAAAAAAAAAAACBEAAwAAAAAAAAAAAAAAAABAiAAYAAAAAAAAAAAAAAAAAABCBMAAAAAAAAAAAAAAAAAAABAiAAYAAAAAAAAAAAAAAAAAgBABMAAAAAAAAAAAAAAAAAAAhAiAAQAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAAAhAmAAAAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAAAQgTAAAAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAIAQATAAAAAAAAAAAAAAAAAAAIQIgAEAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAAAIQJgAAAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAAAAEIEwAAAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAACAEAEwAAAAAAAAAAAAAAAAAACECIABAAAAAAAAAAAAAAAAACBEAAwAAAAAAAAAAAAAAAAAACECYAAAAAAAAAAAAAAAAAAACBEAAwAAAAAAAAAAAAAAAABAiAAYAAAAAAAAAAAAAAAAAABCBMAAAAAAAAAAAAAAAAAAABAiAAYAAAAAAAAAAAAAAAAAgBABMAAAAAAAAAAAAAAAAAAAhAiAAQAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAAAhAmAAAAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAAAQgTAAAAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAIAQATAAAAAAAAAAAAAAAAAAAIQIgAEAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAAAIQJgAAAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAAAAEIEwAAAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAACAEAEwAAAAAAAAAAAAAAAAAACECIABAAAAAAAAAAAAAAAAACBEAAwAAAAAAAAAAAAAAAAAACECYAAAAAAAAAAAAAAAAAAACBEAAwAAAAAAAAAAAAAAAABAiAAYAAAAAAAAAAAAAAAAAABCBMAAAAAAAAAAAAAAAAAAABAiAAYAAAAAAAAAAAAAAAAAgBABMAAAAAAAAAAAAAAAAAAAhAiAAQAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAAAhAmAAAAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAAAQgTAAAAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAIAQATAAAAAAAAAAAAAAAAAAAIQIgAEAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAAAIQJgAAAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAAAAEIEwAAAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAACAEAEwAAAAAAAAAAAAAAAAAACECIABAAAAAAAAAAAAAAAAACBEAAwAAAAAAAAAAAAAAAAAACECYAAAAAAAAAAAAAAAAAAACBEAAwAAAAAAAAAAAAAAAABAiAAYAAAAAAAAAAAAAAAAAABCBMAAAAAAAAAAAAAAAAAAABAiAAYAAAAAAAAAAAAAAAAAgBABMAAAAAAAAAAAAAAAAAAAhAiAAQAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAAAhAmAAAAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAAAQgTAAAAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAIAQATAAAAAAAAAAAAAAAAAAAIQIgAEAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAAAIQJgAAAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAAAAEIEwAAAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAACAEAEwAAAAAAAAAAAAAAAAAACECIABAAAAAAAAAAAAAAAAACBEAAwAAAAAAAAAAAAAAAAAACECYAAAAAAAAAAAAAAAAAAACBEAAwAAAAAAAAAAAAAAAABAiAAYAAAAAAAAAAAAAAAAAABCBMAAAAAAAAAAAAAAAAAAABAiAAYAAAAAAAAAAAAAAAAAgBABMAAAAAAAAAAAAAAAAAAAhAiAAQAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAAAhAmAAAAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAAAQgTAAAAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAIAQATAAAAAAAAAAAAAAAAAAAIQIgAEAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAAAIQJgAAAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAAAAEIEwAAAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAACAEAEwAAAAAAAAAAAAAAAAAACECIABAAAAAAAAAAAAAAAAACBEAAwAAAAAAAAAAAAAAAAAACECYAAAAAAAAAAAAAAAAAAACBEAAwAAAAAAAAAAAAAAAABAiAAYAAAAAAAAAAAAAAAAAABCBMAAAAAAAAAAAAAAAAAAABAiAAYAAAAAAAAAAAAAAAAAgBABMAAAAAAAAAAAAAAAAAAAhAiAAQAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAAAhAmAAAAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAAAQgTAAAAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAIAQATAAAAAAAAAAAAAAAAAAAIQIgAEAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAAAIQJgAAAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAAAAEIEwAAAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAACAEAEwAAAAAAAAAAAAAAAAAACECIABAAAAAAAAAAAAAAAAACBEAAwAAAAAAAAAAAAAAAAAACECYAAAAAAAAAAAAAAAAAAACBEAAwAAAAAAAAAAAAAAAABAiAAYAAAAAAAAAAAAAAAAAABCBMAAAAAAAAAAAAAAAAAAABAiAAYAAAAAAAAAAAAAAAAAgBABMAAAAAAAAAAAAAAAAAAAhAiAAQAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAAAhAmAAAAAAAAAAAAAAAAAAAAgRAAMAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAAAQgTAAAAAAAAAAAAAAAAAAAAQIgAGAAAAAAAAAAAAAAAAAIAQATAAAAAAAAAAAAAAAAAAAIQIgAEAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAAAIQJgAAAAAAAAAAAAAAAAAAAIEQADAAAAAAAAAAAAAAAAAECIABgAAAAAAAAAAAAAAAAAAEIEwAAA8Cv7diwAAAAAMMjfeho7yiMAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAB6BqI2AAAgAElEQVQAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAIDYt2MBAAAAgEH+1tPYUR4BAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAAAAAAAAAAAAAAAAwIgADAAAAAAAAAAAAAAAAAAAIwIwAAAAAAAAAAAAAAAAAACMCMAAAAAAAAAAAAAAAAAAADAiAAMAAADUvh0LAAAAAAzyt57GjvIIAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAALUyQa4AAAaHSURBVAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYEYAAAAAAAAAAAAAAAAAAAGBGAAQAAAAAAAAAAAAAAAABgRAAGAAAAAAAAAAAAAAAAAIARARgAAAAAAAAAAAAAAAAAAEYCGxon7Z1E+EUAAAAASUVORK5CYII=","mime_type":"image/png","name":"screenshot"}],"result":{"duration":780000000,"status":"passed"},"match":{"location":"co.wedevx.digitalbank.automation.ui.steps.Hooks.afterEachScenario(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":3369000000,"status":"passed"},"line":5,"name":"the user logged in as \"mikeguerrero42912@yahoo.com\" \"Boo42912.\"","match":{"arguments":[{"val":"\"mikeguerrero42912@yahoo.com\"","offset":22},{"val":"\"Boo42912.\"","offset":52}],"location":"co.wedevx.digitalbank.automation.ui.steps.CheckingAccountSteps.the_user_logged_in_as(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"error_message":"org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#checking\\-menu\"}\n  (Session info: headless chrome=119.0.6045.199)\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'\nSystem info: host: 'Mikes-MBP.attlocal.net', ip: '2600:1700:e1a0:2ac0:0:0:0:28%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '1.8.0_241'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 119.0.6045.199, chrome: {chromedriverVersion: 119.0.6045.105 (38c72552c5e..., userDataDir: /var/folders/z4/splffpjn0h9...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50628}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}\nSession ID: 1606fb23202793b8a3169e7f00504b1d\n*** Element info: {Using=id, value=checking-menu}\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)\n\tat org.openqa.selenium.By$ById.findElement(By.java:188)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\n\tat com.sun.proxy.$Proxy22.click(Unknown Source)\n\tat co.wedevx.digitalbank.automation.ui.pages.CreateCheckingPage.createNewChecking(CreateCheckingPage.java:49)\n\tat co.wedevx.digitalbank.automation.ui.steps.CheckingAccountSteps.the_user_creates_a_new_checking_account_with_the_following_data(CheckingAccountSteps.java:40)\n\tat ✽.the user creates a new checking account with the following data(classpath:ui/features/checking/NewChecking.feature:6)\n","duration":5008000000,"status":"failed"},"line":6,"name":"the user creates a new checking account with the following data","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.CheckingAccountSteps.the_user_creates_a_new_checking_account_with_the_following_data(java.util.List<co.wedevx.digitalbank.automation.ui.models.NewCheckingAccountInfo>)"},"rows":[{"cells":["checkingAccountType","accountOwnership","accountName","initialDepositAmount"]},{"cells":["Standard Checking","Individual","Elon Musk Second Checking","100000.00"]}],"keyword":"When "},{"result":{"status":"skipped"},"line":9,"name":"the user should see the green \"Successfully created new Standard Checking account named Elon Musk Second Checking\" message","match":{"arguments":[{"val":"\"Successfully created new Standard Checking account named Elon Musk Second Checking\"","offset":30}],"location":"co.wedevx.digitalbank.automation.ui.steps.CheckingAccountSteps.the_user_should_see_the_green_message(java.lang.String)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":10,"name":"the user should see newly added account card","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.CheckingAccountSteps.the_user_should_see_newly_added_account_card(java.util.List<co.wedevx.digitalbank.automation.ui.models.AccountCard>)"},"rows":[{"cells":["accountName","accountType","ownership","accountNumber","interestRate","balance"]},{"cells":["Elon Musk Second Checking","Standard Checking","Individual","486132924","0.0%","100000.00"]}],"keyword":"And "},{"result":{"status":"skipped"},"line":13,"name":"the user should see the following transactions","match":{"location":"co.wedevx.digitalbank.automation.ui.steps.CheckingAccountSteps.the_user_should_see_the_following_transactions(java.util.List<co.wedevx.digitalbank.automation.ui.models.BankTransaction>)"},"rows":[{"cells":["date","category","description","amount","balance"]},{"cells":["2023-10-17 13:46","Income","845323939 (DPT) - Deposit","100000.00","100000.00"]}],"keyword":"And "}]}],"name":"Creating a new checking account","description":"","id":"creating-a-new-checking-account","keyword":"Feature","uri":"classpath:ui/features/checking/NewChecking.feature","tags":[]}]